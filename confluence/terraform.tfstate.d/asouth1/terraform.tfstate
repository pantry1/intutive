{
  "version": 4,
  "terraform_version": "1.4.6",
  "serial": 217,
  "lineage": "0735330f-4a32-e709-b4a4-d7321fe82049",
  "outputs": {
    "cluster_certificate_authority_data": {
      "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1EY3hNakV3TkRBeU9Wb1hEVE16TURjd09URXdOREF5T1Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmhTCkZ2WnhMRU9zckgrU2czN0F5d0V5WlFVTURJOUg0UHBZNUhkRG4xMXh4MmFlVlZ4aXNCWVZ5aXNHUzZVY3ljbWsKMU9aUEczblhoMlBORUNweHo4VDVkdlJRVVdBWDZLYUpPT1RZYzRsb1o5VEZMWjZPTWQ1NzFUalZRZExCdDdhVgpXbHg5a1F4a3JWQnd6RXdmU3BkQ0I1Zm9GR0FsU1FsTVlBaFlDWlBta3h0RFRiVDRZbUFwUmdMUFRTZjhhd29uCldveElGRERMWElOTUYxTC9uSlV6QkhETlljdWZoa2xYUDZvQkRlWHdTbFNZeXdnWnU3cTBVT0JzUFBxT3ZRSnEKS0d2Rzc4MUF3MVo1dGxVd0lNcGxrMzhZUHJncUNqNGRobXZUU3JFQVJ1VzRhWnN0RDBiaFdKemd4Vk5EWGNvNgpzQ3Q3K0Z1UEp0YnJnZkI0cS84Q0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZBSzNsT0ZKcnZYdnJaSS9YcFRDQ2ovYUVXZUVNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSklPcDkyWXh2dmVRSGl2akpndQp2RVJxUVF0djhRMGszbmVVSk9iQ2E1a3loaXZuQ2VEK1FRWXEwZmE5WGFYTFZQeWJYQU9lVHZJVDNqZjF0Z1VvCjR0RktYQ3NPOE5Eam9iZUtad0Z0cUpMS3RLaXRWZkJaeVV4UVU1VkwrTWZhNmU0T1BCbEk0dC83Sm03bDM1M3UKV2JYbTVRT08rYjFyelJKSUdhcE5XN1BqMUY2eUcyY1RFSVFCRnJUMUx2M0lIa2ZnYlUxKzJ2MWF2RG9VaFo2NgpZbTRBT0RXQnZLeEc3Nkozb2pyazQ4cHExdEVlVTExemZHVlNzbDBRUDNJNlpuRGVFWVdMWWVTV1VsMlEzRVZoCjhVdWpWVTlhKzc2SGZGcC9sK1h6bE5aaDdqemNaYWNCWmtNOEJOYzJVOWNldU9ObTRWSFpISGRJNWpCOERTVW8KUW9NPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
      "type": "string"
    },
    "cluster_endpoint": {
      "value": "https://68A6BF6E01B74582D27EB67600967989.gr7.ap-south-1.eks.amazonaws.com",
      "type": "string"
    },
    "cluster_name": {
      "value": "atlassian-cluster-1",
      "type": "string"
    },
    "node_security_group_id": {
      "value": "sg-0e98117b37165479e",
      "type": "string"
    },
    "region": {
      "value": "ap-south-1",
      "type": "string"
    },
    "vpc_id": {
      "value": "vpc-0f851beb2ba287c51",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "998516096174",
            "arn": "arn:aws:iam::998516096174:user/svc-terraform",
            "id": "998516096174",
            "user_id": "AIDA6Q7BSPSXNVRO46LMO"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "example",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:ap-south-1:998516096174:cluster/atlassian-cluster-1",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1EY3hNakV3TkRBeU9Wb1hEVE16TURjd09URXdOREF5T1Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmhTCkZ2WnhMRU9zckgrU2czN0F5d0V5WlFVTURJOUg0UHBZNUhkRG4xMXh4MmFlVlZ4aXNCWVZ5aXNHUzZVY3ljbWsKMU9aUEczblhoMlBORUNweHo4VDVkdlJRVVdBWDZLYUpPT1RZYzRsb1o5VEZMWjZPTWQ1NzFUalZRZExCdDdhVgpXbHg5a1F4a3JWQnd6RXdmU3BkQ0I1Zm9GR0FsU1FsTVlBaFlDWlBta3h0RFRiVDRZbUFwUmdMUFRTZjhhd29uCldveElGRERMWElOTUYxTC9uSlV6QkhETlljdWZoa2xYUDZvQkRlWHdTbFNZeXdnWnU3cTBVT0JzUFBxT3ZRSnEKS0d2Rzc4MUF3MVo1dGxVd0lNcGxrMzhZUHJncUNqNGRobXZUU3JFQVJ1VzRhWnN0RDBiaFdKemd4Vk5EWGNvNgpzQ3Q3K0Z1UEp0YnJnZkI0cS84Q0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZBSzNsT0ZKcnZYdnJaSS9YcFRDQ2ovYUVXZUVNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSklPcDkyWXh2dmVRSGl2akpndQp2RVJxUVF0djhRMGszbmVVSk9iQ2E1a3loaXZuQ2VEK1FRWXEwZmE5WGFYTFZQeWJYQU9lVHZJVDNqZjF0Z1VvCjR0RktYQ3NPOE5Eam9iZUtad0Z0cUpMS3RLaXRWZkJaeVV4UVU1VkwrTWZhNmU0T1BCbEk0dC83Sm03bDM1M3UKV2JYbTVRT08rYjFyelJKSUdhcE5XN1BqMUY2eUcyY1RFSVFCRnJUMUx2M0lIa2ZnYlUxKzJ2MWF2RG9VaFo2NgpZbTRBT0RXQnZLeEc3Nkozb2pyazQ4cHExdEVlVTExemZHVlNzbDBRUDNJNlpuRGVFWVdMWWVTV1VsMlEzRVZoCjhVdWpWVTlhKzc2SGZGcC9sK1h6bE5aaDdqemNaYWNCWmtNOEJOYzJVOWNldU9ObTRWSFpISGRJNWpCOERTVW8KUW9NPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
              }
            ],
            "cluster_id": null,
            "created_at": "2023-07-12 10:35:44.086 +0000 UTC",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator"
            ],
            "endpoint": "https://68A6BF6E01B74582D27EB67600967989.gr7.ap-south-1.eks.amazonaws.com",
            "id": "atlassian-cluster-1",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "atlassian-cluster-1",
            "outpost_config": [],
            "platform_version": "eks.3",
            "role_arn": "arn:aws:iam::998516096174:role/atlassian-cluster-1-cluster-20230712103521018600000004",
            "status": "ACTIVE",
            "tags": {},
            "version": "1.27",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-0084fed1236d353e3",
                "endpoint_private_access": true,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0cad4a1ee15b755b6"
                ],
                "subnet_ids": [
                  "subnet-03ce94c2a2af0a2aa",
                  "subnet-072b3186da6c8e27d",
                  "subnet-073a5d0b35e22e05d"
                ],
                "vpc_id": "vpc-0f851beb2ba287c51"
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "atlassian-cluster-1",
            "name": "atlassian-cluster-1",
            "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMuYW1hem9uYXdzLmNvbS8_QWN0aW9uPUdldENhbGxlcklkZW50aXR5JlZlcnNpb249MjAxMS0wNi0xNSZYLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUE2UTdCU1BTWEhUVktGR0Y2JTJGMjAyMzA3MTIlMkZ1cy1lYXN0LTElMkZzdHMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDIzMDcxMlQxMTUwMTZaJlgtQW16LUV4cGlyZXM9MCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QlM0J4LWs4cy1hd3MtaWQmWC1BbXotU2lnbmF0dXJlPTY4OGFjNzY1OGFlMmFmYjAxNzg2MWI1NWU1M2I0MzJmMDVjMWFkZmNhOTRkOGY1ZTAzYzEyYzQ1ZDk4YTYwOTI"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_secretsmanager_secret",
      "name": "secret_store",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:secretsmanager:ap-south-1:998516096174:secret:SecretStore-atlassian-cluster-1-3yamXJ",
            "description": "",
            "id": "arn:aws:secretsmanager:ap-south-1:998516096174:secret:SecretStore-atlassian-cluster-1-3yamXJ",
            "kms_key_id": "",
            "name": "SecretStore-atlassian-cluster-1",
            "policy": "",
            "tags": {
              "cluster_name": "atlassian-cluster-1",
              "terraform_workspace": "apsouth1"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.bitbucket",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "998516096174",
            "arn": "arn:aws:iam::998516096174:user/svc-terraform",
            "id": "998516096174",
            "user_id": "AIDA6Q7BSPSXNVRO46LMO"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.bitbucket",
      "mode": "data",
      "type": "aws_db_instance",
      "name": "database",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "address": "atlassian-rds-atlassian-cluster-1.cmlkd6hzxk08.ap-south-1.rds.amazonaws.com",
            "allocated_storage": 10,
            "auto_minor_version_upgrade": true,
            "availability_zone": "ap-south-1b",
            "backup_retention_period": 0,
            "ca_cert_identifier": "rds-ca-2019",
            "db_cluster_identifier": "",
            "db_instance_arn": "arn:aws:rds:ap-south-1:998516096174:db:atlassian-rds-atlassian-cluster-1",
            "db_instance_class": "db.t3.micro",
            "db_instance_identifier": "atlassian-rds-atlassian-cluster-1",
            "db_instance_port": 0,
            "db_name": "bitbucket",
            "db_parameter_groups": [
              "default.postgres14"
            ],
            "db_subnet_group": "rds-subnet-group-atlassian-cluster-1",
            "enabled_cloudwatch_logs_exports": [],
            "endpoint": "atlassian-rds-atlassian-cluster-1.cmlkd6hzxk08.ap-south-1.rds.amazonaws.com:5432",
            "engine": "postgres",
            "engine_version": "14.7",
            "hosted_zone_id": "Z2VFMSZA74J7XZ",
            "id": "atlassian-rds-atlassian-cluster-1",
            "iops": 0,
            "kms_key_id": "",
            "license_model": "postgresql-license",
            "master_user_secret": null,
            "master_username": "postgres",
            "monitoring_interval": 0,
            "monitoring_role_arn": "",
            "multi_az": false,
            "network_type": "IPV4",
            "option_group_memberships": [
              "default:postgres-14"
            ],
            "port": 5432,
            "preferred_backup_window": "16:44-17:14",
            "preferred_maintenance_window": "sun:07:26-sun:07:56",
            "publicly_accessible": false,
            "replicate_source_db": "",
            "resource_id": "db-P2ZIFMO4AGVVNBJYS7N4FK7AEA",
            "storage_encrypted": false,
            "storage_throughput": 0,
            "storage_type": "gp2",
            "tags": {
              "cluster_name": "atlassian-cluster-1",
              "terraform_workspace": "apsouth1"
            },
            "timezone": "",
            "vpc_security_groups": [
              "sg-06c7ca2993752c193"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.bitbucket",
      "mode": "data",
      "type": "aws_instance",
      "name": "nfs_server",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "ami": "ami-04e81c5c7a4851ebf",
            "arn": "arn:aws:ec2:ap-south-1:998516096174:instance/i-07a087e6f8be0fad4",
            "associate_public_ip_address": true,
            "availability_zone": "ap-south-1a",
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "filter": [
              {
                "name": "instance-state-name",
                "values": [
                  "running"
                ]
              },
              {
                "name": "tag:Name",
                "values": [
                  "nfs-server"
                ]
              },
              {
                "name": "tag:cluster_name",
                "values": [
                  "atlassian-cluster-1"
                ]
              }
            ],
            "get_password_data": false,
            "get_user_data": false,
            "host_id": "",
            "host_resource_group_arn": "",
            "iam_instance_profile": "",
            "id": "i-07a087e6f8be0fad4",
            "instance_id": null,
            "instance_state": "running",
            "instance_tags": null,
            "instance_type": "t2.small",
            "ipv6_addresses": [],
            "key_name": "nfs-server-ap-south-1",
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional",
                "instance_metadata_tags": "disabled"
              }
            ],
            "monitoring": false,
            "network_interface_id": "eni-09100b53c03dbdb0a",
            "outpost_arn": "",
            "password_data": null,
            "placement_group": "",
            "placement_partition_number": 0,
            "private_dns": "ip-10-0-4-47.ap-south-1.compute.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "10.0.4.47",
            "public_dns": "ec2-3-110-173-17.ap-south-1.compute.amazonaws.com",
            "public_ip": "3.110.173.17",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/xvda",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-0ced9c3efc05d3c22",
                "volume_size": 20,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-03b362bbc29eedb1d",
            "tags": {
              "Name": "nfs-server",
              "cluster_name": "atlassian-cluster-1",
              "name": "nfs-server",
              "terraform_workspace": "apsouth1"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "46693e0e5bce9272365f096475f7cf1ef7a73235",
            "user_data_base64": null,
            "vpc_security_group_ids": [
              "sg-09eb33230113424b8"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.bitbucket",
      "mode": "data",
      "type": "aws_secretsmanager_secret",
      "name": "secret_store",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:secretsmanager:ap-south-1:998516096174:secret:SecretStore-atlassian-cluster-1-3yamXJ",
            "description": "",
            "id": "arn:aws:secretsmanager:ap-south-1:998516096174:secret:SecretStore-atlassian-cluster-1-3yamXJ",
            "kms_key_id": "",
            "name": "SecretStore-atlassian-cluster-1",
            "policy": "",
            "tags": {
              "cluster_name": "atlassian-cluster-1",
              "terraform_workspace": "apsouth1"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.bitbucket",
      "mode": "managed",
      "type": "helm_release",
      "name": "bitbucket-data-center",
      "provider": "module.bitbucket.provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "modules/bitbucket-module/bitbucket",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "bitbucket",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "8.9.0",
                "chart": "bitbucket",
                "name": "bitbucket",
                "namespace": "bitbucket",
                "revision": 1,
                "values": "{\"bitbucket\":{\"clustering\":{\"enabled\":true},\"elasticSearch\":{\"baseUrl\":\"elasticsearch-es-http.elastic.svc:9200\",\"credentials\":{\"secretName\":\"elk-auth-secret\"}},\"service\":{\"type\":\"NodePort\"},\"sysadminCredentials\":{\"secretName\":\"bitbucket-auth\"}},\"database\":{\"credentials\":{\"secretName\":\"mysql-auth\"},\"driver\":\"org.postgresql.Driver\",\"url\":\"jdbc:postgresql://atlassian-rds-atlassian-cluster-1.cmlkd6hzxk08.ap-south-1.rds.amazonaws.com:5432/bitbucket\"},\"ingress\":{\"annotations\":{\"alb.ingress.kubernetes.io/backend-protocol\":\"HTTP\",\"alb.ingress.kubernetes.io/listen-ports\":\"[{\\\"HTTP\\\": 80}]\",\"alb.ingress.kubernetes.io/scheme\":\"internet-facing\",\"alb.ingress.kubernetes.io/subnets\":\"subnet-03b362bbc29eedb1d,subnet-061789e4cfa639907, subnet-0a2fe503d22d48b0a\",\"alb.ingress.kubernetes.io/success-codes\":\"200,302\",\"kubernetes.io/ingress.class\":\"alb\"},\"className\":\"alb\",\"create\":true,\"nginx\":false,\"path\":\"/\"},\"replicaCount\":1,\"secretStoreName\":\"SecretStore-atlassian-cluster-1\",\"volumes\":{\"localHome\":{\"persistentVolume\":{\"storageClassName\":\"gp2\"},\"persistentVolumeClaim\":{\"create\":true,\"resources\":{\"requests\":{\"storage\":\"1Gi\"}},\"storageClassName\":\"gp2\"}},\"sharedHome\":{\"nfsPermissionFixer\":{\"enabled\":true},\"persistentVolume\":{\"create\":true,\"nfs\":{\"path\":\"/nfsshare\",\"server\":\"10.0.4.47\"}},\"persistentVolumeClaim\":{\"create\":true,\"storageClassName\":\"\"}}}}",
                "version": "1.12.0"
              }
            ],
            "name": "bitbucket",
            "namespace": "bitbucket",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "bitbucket.clustering.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "bitbucket.elasticSearch.baseUrl",
                "type": "",
                "value": "elasticsearch-es-http.elastic.svc:9200"
              },
              {
                "name": "bitbucket.elasticSearch.credentials.secretName",
                "type": "",
                "value": "elk-auth-secret"
              },
              {
                "name": "bitbucket.service.type",
                "type": "",
                "value": "ClusterIP"
              },
              {
                "name": "bitbucket.service.type",
                "type": "",
                "value": "NodePort"
              },
              {
                "name": "bitbucket.sysadminCredentials.secretName",
                "type": "string",
                "value": "bitbucket-auth"
              },
              {
                "name": "database.credentials.secretName",
                "type": "string",
                "value": "mysql-auth"
              },
              {
                "name": "database.driver",
                "type": "string",
                "value": "org.postgresql.Driver"
              },
              {
                "name": "database.url",
                "type": "string",
                "value": "jdbc:postgresql://atlassian-rds-atlassian-cluster-1.cmlkd6hzxk08.ap-south-1.rds.amazonaws.com:5432/bitbucket"
              },
              {
                "name": "ingress.annotations.alb\\.ingress\\.kubernetes\\.io/backend-protocol",
                "type": "string",
                "value": "HTTP"
              },
              {
                "name": "ingress.annotations.alb\\.ingress\\.kubernetes\\.io/listen-ports",
                "type": "string",
                "value": "[{\"HTTP\": 80}]"
              },
              {
                "name": "ingress.annotations.alb\\.ingress\\.kubernetes\\.io/scheme",
                "type": "string",
                "value": "internet-facing"
              },
              {
                "name": "ingress.annotations.alb\\.ingress\\.kubernetes\\.io/subnets",
                "type": "",
                "value": "subnet-03b362bbc29eedb1d\\,subnet-061789e4cfa639907\\, subnet-0a2fe503d22d48b0a"
              },
              {
                "name": "ingress.annotations.alb\\.ingress\\.kubernetes\\.io/success-codes",
                "type": "",
                "value": "200\\,302"
              },
              {
                "name": "ingress.annotations.kubernetes\\.io/ingress\\.class",
                "type": "string",
                "value": "alb"
              },
              {
                "name": "ingress.className",
                "type": "",
                "value": "alb"
              },
              {
                "name": "ingress.create",
                "type": "",
                "value": "true"
              },
              {
                "name": "ingress.nginx",
                "type": "",
                "value": "false"
              },
              {
                "name": "ingress.path",
                "type": "",
                "value": "/"
              },
              {
                "name": "replicaCount",
                "type": "",
                "value": "1"
              },
              {
                "name": "secretStoreName",
                "type": "",
                "value": "SecretStore-atlassian-cluster-1"
              },
              {
                "name": "volumes.localHome.persistentVolume.storageClassName",
                "type": "string",
                "value": "gp2"
              },
              {
                "name": "volumes.localHome.persistentVolumeClaim.create",
                "type": "",
                "value": "true"
              },
              {
                "name": "volumes.localHome.persistentVolumeClaim.resources.requests.storage",
                "type": "string",
                "value": "1Gi"
              },
              {
                "name": "volumes.localHome.persistentVolumeClaim.storageClassName",
                "type": "string",
                "value": "gp2"
              },
              {
                "name": "volumes.sharedHome.nfsPermissionFixer.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "volumes.sharedHome.persistentVolume.create",
                "type": "",
                "value": "true"
              },
              {
                "name": "volumes.sharedHome.persistentVolume.nfs.path",
                "type": "string",
                "value": "/nfsshare"
              },
              {
                "name": "volumes.sharedHome.persistentVolume.nfs.server",
                "type": "",
                "value": "10.0.4.47"
              },
              {
                "name": "volumes.sharedHome.persistentVolumeClaim.create",
                "type": "",
                "value": "true"
              },
              {
                "name": "volumes.sharedHome.persistentVolumeClaim.storageClassName",
                "type": "",
                "value": ""
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "1.12.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster_auth.cluster",
            "module.bitbucket.data.aws_db_instance.database",
            "module.bitbucket.data.aws_instance.nfs_server",
            "module.bitbucket.helm_release.eck-operators",
            "module.eks_cluster.module.eks.aws_eks_cluster.this"
          ]
        }
      ]
    },
    {
      "module": "module.bitbucket",
      "mode": "managed",
      "type": "helm_release",
      "name": "eck-elasticsearch",
      "provider": "module.bitbucket.provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "modules/bitbucket-module/eck-elasticsearch",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "eck-elasticsearch",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "",
                "chart": "eck-elasticsearch",
                "name": "eck-elasticsearch",
                "namespace": "elastic",
                "revision": 1,
                "values": "{\"auth\":{\"fileRealm\":[{\"secretName\":\"elk-auth-secret\"}]},\"http\":{\"service\":{\"spec\":{\"type\":\"ClusterIP\"}}},\"nodeSets\":[{\"podTemplate\":{\"spec\":{\"containers\":[{\"resources\":{\"limits\":{\"memory\":\"2Gi\"},\"requests\":{\"memory\":\"2Gi\"}}}]}}}],\"storage\":\"1Gi\",\"storageClassName\":\"gp2\"}",
                "version": "0.4.0"
              }
            ],
            "name": "eck-elasticsearch",
            "namespace": "elastic",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "auth.fileRealm[0].secretName",
                "type": "",
                "value": "elk-auth-secret"
              },
              {
                "name": "http.service.spec.type",
                "type": "",
                "value": "ClusterIP"
              },
              {
                "name": "nodeSets[0].podTemplate.spec.containers[0].resources.limits.memory",
                "type": "",
                "value": "2Gi"
              },
              {
                "name": "nodeSets[0].podTemplate.spec.containers[0].resources.requests.memory",
                "type": "",
                "value": "2Gi"
              },
              {
                "name": "storage",
                "type": "",
                "value": "1Gi"
              },
              {
                "name": "storageClassName",
                "type": "",
                "value": "gp2"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "0.4.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster_auth.cluster",
            "module.bitbucket.time_sleep.wait_30_seconds",
            "module.eks_cluster.module.eks.aws_eks_cluster.this"
          ]
        }
      ]
    },
    {
      "module": "module.bitbucket",
      "mode": "managed",
      "type": "helm_release",
      "name": "eck-operators",
      "provider": "module.bitbucket.provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "eck-operator",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "eck-operator",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "2.8.0",
                "chart": "eck-operator",
                "name": "eck-operator",
                "namespace": "elastic",
                "revision": 1,
                "values": "null",
                "version": "2.8.0"
              }
            ],
            "name": "eck-operator",
            "namespace": "elastic",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://helm.elastic.co",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "2.8.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster_auth.cluster",
            "module.eks_cluster.data.aws_availability_zones.available",
            "module.eks_cluster.data.aws_instances.my_worker_nodes",
            "module.eks_cluster.data.aws_subnets.private_subnets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_caller_identity.current",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_partition.current",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_region.current",
            "module.eks_cluster.module.eks.aws_cloudwatch_log_group.this",
            "module.eks_cluster.module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks_cluster.module.eks.aws_eks_addon.before_compute",
            "module.eks_cluster.module.eks.aws_eks_addon.this",
            "module.eks_cluster.module.eks.aws_eks_cluster.this",
            "module.eks_cluster.module.eks.aws_eks_identity_provider_config.this",
            "module.eks_cluster.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks_cluster.module.eks.aws_iam_policy.cluster_encryption",
            "module.eks_cluster.module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node",
            "module.eks_cluster.module.eks.aws_security_group_rule.cluster",
            "module.eks_cluster.module.eks.aws_security_group_rule.node",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_eks_addon_version.this",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.data.tls_certificate.this",
            "module.eks_cluster.module.eks.kubernetes_config_map.aws_auth",
            "module.eks_cluster.module.eks.kubernetes_config_map_v1_data.aws_auth",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.kms.aws_kms_alias.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_grant.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_ami.eks_default",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.time_sleep.this"
          ]
        }
      ]
    },
    {
      "module": "module.bitbucket",
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "secret-store",
      "provider": "module.bitbucket.provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "external-secrets.io/v1beta1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/external-secrets.io/v1beta1/clustersecretstores/secret-store",
            "ignore_fields": null,
            "kind": "ClusterSecretStore",
            "live_manifest_incluster": "7f17a6df51e5749b38e8454b5c2c746410fb6df191365941e3567354f365857d",
            "live_uid": "be0149f3-3d8d-410d-95ab-39584ceae515",
            "name": "secret-store",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "be0149f3-3d8d-410d-95ab-39584ceae515",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: external-secrets.io/v1beta1\nkind: ClusterSecretStore\nmetadata:\n  name: secret-store    \nspec:\n  provider:\n    aws:\n      service: SecretsManager\n      region: ap-south-1\n      auth:\n        jwt:\n         serviceAccountRef:\n           name: external-secrets\n           namespace: external-secrets",
            "yaml_body_parsed": "apiVersion: external-secrets.io/v1beta1\nkind: ClusterSecretStore\nmetadata:\n  name: secret-store\nspec:\n  provider:\n    aws:\n      auth:\n        jwt:\n          serviceAccountRef:\n            name: external-secrets\n            namespace: external-secrets\n      region: ap-south-1\n      service: SecretsManager\n",
            "yaml_incluster": "7f17a6df51e5749b38e8454b5c2c746410fb6df191365941e3567354f365857d"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster_auth.cluster",
            "module.eks_cluster.module.eks.aws_eks_cluster.this"
          ]
        }
      ]
    },
    {
      "module": "module.bitbucket",
      "mode": "managed",
      "type": "time_sleep",
      "name": "wait_30_seconds",
      "provider": "provider[\"registry.terraform.io/hashicorp/time\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "create_duration": "30s",
            "destroy_duration": null,
            "id": "2023-07-12T11:42:20Z",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_eks_cluster_auth.cluster",
            "module.bitbucket.helm_release.eck-operators",
            "module.eks_cluster.data.aws_availability_zones.available",
            "module.eks_cluster.data.aws_instances.my_worker_nodes",
            "module.eks_cluster.data.aws_subnets.private_subnets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_caller_identity.current",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_partition.current",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_region.current",
            "module.eks_cluster.module.eks.aws_cloudwatch_log_group.this",
            "module.eks_cluster.module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks_cluster.module.eks.aws_eks_addon.before_compute",
            "module.eks_cluster.module.eks.aws_eks_addon.this",
            "module.eks_cluster.module.eks.aws_eks_cluster.this",
            "module.eks_cluster.module.eks.aws_eks_identity_provider_config.this",
            "module.eks_cluster.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks_cluster.module.eks.aws_iam_policy.cluster_encryption",
            "module.eks_cluster.module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node",
            "module.eks_cluster.module.eks.aws_security_group_rule.cluster",
            "module.eks_cluster.module.eks.aws_security_group_rule.node",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_eks_addon_version.this",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.data.tls_certificate.this",
            "module.eks_cluster.module.eks.kubernetes_config_map.aws_auth",
            "module.eks_cluster.module.eks.kubernetes_config_map_v1_data.aws_auth",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.kms.aws_kms_alias.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_grant.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_ami.eks_default",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.time_sleep.this"
          ]
        }
      ]
    },
    {
      "module": "module.confluence",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "998516096174",
            "arn": "arn:aws:iam::998516096174:user/svc-terraform",
            "id": "998516096174",
            "user_id": "AIDA6Q7BSPSXNVRO46LMO"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.confluence",
      "mode": "data",
      "type": "aws_db_instance",
      "name": "database",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "address": "atlassian-rds-atlassian-cluster-1.cmlkd6hzxk08.ap-south-1.rds.amazonaws.com",
            "allocated_storage": 10,
            "auto_minor_version_upgrade": true,
            "availability_zone": "ap-south-1b",
            "backup_retention_period": 0,
            "ca_cert_identifier": "rds-ca-2019",
            "db_cluster_identifier": "",
            "db_instance_arn": "arn:aws:rds:ap-south-1:998516096174:db:atlassian-rds-atlassian-cluster-1",
            "db_instance_class": "db.t3.micro",
            "db_instance_identifier": "atlassian-rds-atlassian-cluster-1",
            "db_instance_port": 0,
            "db_name": "bitbucket",
            "db_parameter_groups": [
              "default.postgres14"
            ],
            "db_subnet_group": "rds-subnet-group-atlassian-cluster-1",
            "enabled_cloudwatch_logs_exports": [],
            "endpoint": "atlassian-rds-atlassian-cluster-1.cmlkd6hzxk08.ap-south-1.rds.amazonaws.com:5432",
            "engine": "postgres",
            "engine_version": "14.7",
            "hosted_zone_id": "Z2VFMSZA74J7XZ",
            "id": "atlassian-rds-atlassian-cluster-1",
            "iops": 0,
            "kms_key_id": "",
            "license_model": "postgresql-license",
            "master_user_secret": null,
            "master_username": "postgres",
            "monitoring_interval": 0,
            "monitoring_role_arn": "",
            "multi_az": false,
            "network_type": "IPV4",
            "option_group_memberships": [
              "default:postgres-14"
            ],
            "port": 5432,
            "preferred_backup_window": "16:44-17:14",
            "preferred_maintenance_window": "sun:07:26-sun:07:56",
            "publicly_accessible": false,
            "replicate_source_db": "",
            "resource_id": "db-P2ZIFMO4AGVVNBJYS7N4FK7AEA",
            "storage_encrypted": false,
            "storage_throughput": 0,
            "storage_type": "gp2",
            "tags": {
              "cluster_name": "atlassian-cluster-1",
              "terraform_workspace": "apsouth1"
            },
            "timezone": "",
            "vpc_security_groups": [
              "sg-06c7ca2993752c193"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.confluence",
      "mode": "data",
      "type": "aws_instance",
      "name": "nfs_server",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "ami": "ami-04e81c5c7a4851ebf",
            "arn": "arn:aws:ec2:ap-south-1:998516096174:instance/i-07a087e6f8be0fad4",
            "associate_public_ip_address": true,
            "availability_zone": "ap-south-1a",
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "filter": [
              {
                "name": "instance-state-name",
                "values": [
                  "running"
                ]
              },
              {
                "name": "tag:Name",
                "values": [
                  "nfs-server"
                ]
              },
              {
                "name": "tag:cluster_name",
                "values": [
                  "atlassian-cluster-1"
                ]
              }
            ],
            "get_password_data": false,
            "get_user_data": false,
            "host_id": "",
            "host_resource_group_arn": "",
            "iam_instance_profile": "",
            "id": "i-07a087e6f8be0fad4",
            "instance_id": null,
            "instance_state": "running",
            "instance_tags": null,
            "instance_type": "t2.small",
            "ipv6_addresses": [],
            "key_name": "nfs-server-ap-south-1",
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional",
                "instance_metadata_tags": "disabled"
              }
            ],
            "monitoring": false,
            "network_interface_id": "eni-09100b53c03dbdb0a",
            "outpost_arn": "",
            "password_data": null,
            "placement_group": "",
            "placement_partition_number": 0,
            "private_dns": "ip-10-0-4-47.ap-south-1.compute.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "10.0.4.47",
            "public_dns": "ec2-3-110-173-17.ap-south-1.compute.amazonaws.com",
            "public_ip": "3.110.173.17",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/xvda",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-0ced9c3efc05d3c22",
                "volume_size": 20,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-03b362bbc29eedb1d",
            "tags": {
              "Name": "nfs-server",
              "cluster_name": "atlassian-cluster-1",
              "name": "nfs-server",
              "terraform_workspace": "apsouth1"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "46693e0e5bce9272365f096475f7cf1ef7a73235",
            "user_data_base64": null,
            "vpc_security_group_ids": [
              "sg-09eb33230113424b8"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.confluence",
      "mode": "managed",
      "type": "helm_release",
      "name": "confluence-data-center",
      "provider": "module.confluence.provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "modules/confluence-module/confluence",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "confluence",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "7.19.10",
                "chart": "confluence",
                "name": "confluence",
                "namespace": "confluence",
                "revision": 1,
                "values": "{\"database\":{\"credentials\":{\"secretName\":\"mysql-auth\"},\"hostname\":\"atlassian-rds-atlassian-cluster-1.cmlkd6hzxk08.ap-south-1.rds.amazonaws.com\",\"type\":\"postgresql\",\"url\":\"jdbc:postgresql://atlassian-rds-atlassian-cluster-1.cmlkd6hzxk08.ap-south-1.rds.amazonaws.com:5432/confluence\"},\"ingress\":{\"annotations\":{\"alb.ingress.kubernetes.io/backend-protocol\":\"HTTP\",\"alb.ingress.kubernetes.io/listen-ports\":\"[{\\\"HTTP\\\": 80}]\",\"alb.ingress.kubernetes.io/scheme\":\"internet-facing\",\"alb.ingress.kubernetes.io/subnets\":\"subnet-03b362bbc29eedb1d,subnet-061789e4cfa639907, subnet-0a2fe503d22d48b0a\",\"alb.ingress.kubernetes.io/success-codes\":\"200,302\",\"kubernetes.io/ingress.class\":\"alb\"},\"className\":\"alb\",\"create\":true,\"nginx\":false,\"path\":\"/\"},\"secretStoreName\":\"SecretStore-atlassian-cluster-1\",\"volumes\":{\"localHome\":{\"persistentVolume\":{\"storageClassName\":\"gp2\"},\"persistentVolumeClaim\":{\"create\":true,\"resources\":{\"requests\":{\"storage\":\"1Gi\"}},\"storageClassName\":\"gp2\"}},\"sharedHome\":{\"persistentVolume\":{\"create\":true,\"nfs\":{\"path\":\"/nfsshare\",\"server\":\"10.0.4.47\"}},\"persistentVolumeClaim\":{\"create\":true,\"storageClassName\":\"\"}}}}",
                "version": "1.13.1"
              }
            ],
            "name": "confluence",
            "namespace": "confluence",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "database.credentials.secretName",
                "type": "string",
                "value": "mysql-auth"
              },
              {
                "name": "database.hostname",
                "type": "string",
                "value": "atlassian-rds-atlassian-cluster-1.cmlkd6hzxk08.ap-south-1.rds.amazonaws.com"
              },
              {
                "name": "database.type",
                "type": "",
                "value": "postgresql"
              },
              {
                "name": "database.url",
                "type": "string",
                "value": "jdbc:postgresql://atlassian-rds-atlassian-cluster-1.cmlkd6hzxk08.ap-south-1.rds.amazonaws.com:5432/confluence"
              },
              {
                "name": "ingress.annotations.alb\\.ingress\\.kubernetes\\.io/backend-protocol",
                "type": "string",
                "value": "HTTP"
              },
              {
                "name": "ingress.annotations.alb\\.ingress\\.kubernetes\\.io/listen-ports",
                "type": "string",
                "value": "[{\"HTTP\": 80}]"
              },
              {
                "name": "ingress.annotations.alb\\.ingress\\.kubernetes\\.io/scheme",
                "type": "string",
                "value": "internet-facing"
              },
              {
                "name": "ingress.annotations.alb\\.ingress\\.kubernetes\\.io/subnets",
                "type": "",
                "value": "subnet-03b362bbc29eedb1d\\,subnet-061789e4cfa639907\\, subnet-0a2fe503d22d48b0a"
              },
              {
                "name": "ingress.annotations.alb\\.ingress\\.kubernetes\\.io/success-codes",
                "type": "",
                "value": "200\\,302"
              },
              {
                "name": "ingress.annotations.kubernetes\\.io/ingress\\.class",
                "type": "string",
                "value": "alb"
              },
              {
                "name": "ingress.className",
                "type": "",
                "value": "alb"
              },
              {
                "name": "ingress.create",
                "type": "",
                "value": "true"
              },
              {
                "name": "ingress.nginx",
                "type": "",
                "value": "false"
              },
              {
                "name": "ingress.path",
                "type": "",
                "value": "/"
              },
              {
                "name": "secretStoreName",
                "type": "",
                "value": "SecretStore-atlassian-cluster-1"
              },
              {
                "name": "volumes.localHome.persistentVolume.storageClassName",
                "type": "string",
                "value": "gp2"
              },
              {
                "name": "volumes.localHome.persistentVolumeClaim.create",
                "type": "",
                "value": "true"
              },
              {
                "name": "volumes.localHome.persistentVolumeClaim.resources.requests.storage",
                "type": "string",
                "value": "1Gi"
              },
              {
                "name": "volumes.localHome.persistentVolumeClaim.storageClassName",
                "type": "string",
                "value": "gp2"
              },
              {
                "name": "volumes.sharedHome.persistentVolume.create",
                "type": "",
                "value": "true"
              },
              {
                "name": "volumes.sharedHome.persistentVolume.nfs.path",
                "type": "string",
                "value": "/nfsshare"
              },
              {
                "name": "volumes.sharedHome.persistentVolume.nfs.server",
                "type": "",
                "value": "10.0.4.47"
              },
              {
                "name": "volumes.sharedHome.persistentVolumeClaim.create",
                "type": "",
                "value": "true"
              },
              {
                "name": "volumes.sharedHome.persistentVolumeClaim.storageClassName",
                "type": "",
                "value": ""
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "1.13.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster_auth.cluster",
            "data.aws_secretsmanager_secret.secret_store",
            "module.confluence.data.aws_db_instance.database",
            "module.confluence.data.aws_instance.nfs_server",
            "module.confluence.kubectl_manifest.secret-store",
            "module.confluence.time_sleep.wait_45_seconds",
            "module.eks_cluster.data.aws_availability_zones.available",
            "module.eks_cluster.data.aws_instances.my_worker_nodes",
            "module.eks_cluster.data.aws_subnets.private_subnets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_caller_identity.current",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_partition.current",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_region.current",
            "module.eks_cluster.module.eks.aws_cloudwatch_log_group.this",
            "module.eks_cluster.module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks_cluster.module.eks.aws_eks_addon.before_compute",
            "module.eks_cluster.module.eks.aws_eks_addon.this",
            "module.eks_cluster.module.eks.aws_eks_cluster.this",
            "module.eks_cluster.module.eks.aws_eks_identity_provider_config.this",
            "module.eks_cluster.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks_cluster.module.eks.aws_iam_policy.cluster_encryption",
            "module.eks_cluster.module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node",
            "module.eks_cluster.module.eks.aws_security_group_rule.cluster",
            "module.eks_cluster.module.eks.aws_security_group_rule.node",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_eks_addon_version.this",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.data.tls_certificate.this",
            "module.eks_cluster.module.eks.kubernetes_config_map.aws_auth",
            "module.eks_cluster.module.eks.kubernetes_config_map_v1_data.aws_auth",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.kms.aws_kms_alias.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_grant.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_ami.eks_default",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.time_sleep.this"
          ]
        }
      ]
    },
    {
      "module": "module.confluence",
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "secret-store",
      "provider": "module.confluence.provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "external-secrets.io/v1beta1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/external-secrets.io/v1beta1/clustersecretstores/secret-store",
            "ignore_fields": null,
            "kind": "ClusterSecretStore",
            "live_manifest_incluster": "7f17a6df51e5749b38e8454b5c2c746410fb6df191365941e3567354f365857d",
            "live_uid": "be0149f3-3d8d-410d-95ab-39584ceae515",
            "name": "secret-store",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "be0149f3-3d8d-410d-95ab-39584ceae515",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: external-secrets.io/v1beta1\nkind: ClusterSecretStore\nmetadata:\n  name: secret-store    \nspec:\n  provider:\n    aws:\n      service: SecretsManager\n      region: ap-south-1\n      auth:\n        jwt:\n         serviceAccountRef:\n           name: external-secrets\n           namespace: external-secrets",
            "yaml_body_parsed": "apiVersion: external-secrets.io/v1beta1\nkind: ClusterSecretStore\nmetadata:\n  name: secret-store\nspec:\n  provider:\n    aws:\n      auth:\n        jwt:\n          serviceAccountRef:\n            name: external-secrets\n            namespace: external-secrets\n      region: ap-south-1\n      service: SecretsManager\n",
            "yaml_incluster": "7f17a6df51e5749b38e8454b5c2c746410fb6df191365941e3567354f365857d"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster_auth.cluster",
            "module.confluence.time_sleep.wait_45_seconds",
            "module.eks_cluster.data.aws_availability_zones.available",
            "module.eks_cluster.data.aws_instances.my_worker_nodes",
            "module.eks_cluster.data.aws_subnets.private_subnets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_caller_identity.current",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_partition.current",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_region.current",
            "module.eks_cluster.module.eks.aws_cloudwatch_log_group.this",
            "module.eks_cluster.module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks_cluster.module.eks.aws_eks_addon.before_compute",
            "module.eks_cluster.module.eks.aws_eks_addon.this",
            "module.eks_cluster.module.eks.aws_eks_cluster.this",
            "module.eks_cluster.module.eks.aws_eks_identity_provider_config.this",
            "module.eks_cluster.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks_cluster.module.eks.aws_iam_policy.cluster_encryption",
            "module.eks_cluster.module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node",
            "module.eks_cluster.module.eks.aws_security_group_rule.cluster",
            "module.eks_cluster.module.eks.aws_security_group_rule.node",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_eks_addon_version.this",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.data.tls_certificate.this",
            "module.eks_cluster.module.eks.kubernetes_config_map.aws_auth",
            "module.eks_cluster.module.eks.kubernetes_config_map_v1_data.aws_auth",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.kms.aws_kms_alias.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_grant.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_ami.eks_default",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.time_sleep.this"
          ]
        }
      ]
    },
    {
      "module": "module.confluence",
      "mode": "managed",
      "type": "kubernetes_storage_class",
      "name": "fast_storage_class",
      "provider": "module.confluence.provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allow_volume_expansion": true,
            "allowed_topologies": [],
            "id": "fast",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "fast",
                "resource_version": "12612",
                "uid": "fd70e320-6a7d-4ca0-958e-4c9c736402b8"
              }
            ],
            "mount_options": [],
            "parameters": {
              "allowAutoIOPSPerGBIncrease": "true",
              "encrypted": "true",
              "type": "gp3"
            },
            "reclaim_policy": "Retain",
            "storage_provisioner": "ebs.csi.aws.com",
            "volume_binding_mode": "WaitForFirstConsumer"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster_auth.cluster",
            "module.eks_cluster.data.aws_availability_zones.available",
            "module.eks_cluster.data.aws_instances.my_worker_nodes",
            "module.eks_cluster.data.aws_subnets.private_subnets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_caller_identity.current",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_partition.current",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_region.current",
            "module.eks_cluster.module.eks.aws_cloudwatch_log_group.this",
            "module.eks_cluster.module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks_cluster.module.eks.aws_eks_addon.before_compute",
            "module.eks_cluster.module.eks.aws_eks_addon.this",
            "module.eks_cluster.module.eks.aws_eks_cluster.this",
            "module.eks_cluster.module.eks.aws_eks_identity_provider_config.this",
            "module.eks_cluster.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks_cluster.module.eks.aws_iam_policy.cluster_encryption",
            "module.eks_cluster.module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node",
            "module.eks_cluster.module.eks.aws_security_group_rule.cluster",
            "module.eks_cluster.module.eks.aws_security_group_rule.node",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_eks_addon_version.this",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.data.tls_certificate.this",
            "module.eks_cluster.module.eks.kubernetes_config_map.aws_auth",
            "module.eks_cluster.module.eks.kubernetes_config_map_v1_data.aws_auth",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.kms.aws_kms_alias.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_grant.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_ami.eks_default",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.time_sleep.this"
          ]
        }
      ]
    },
    {
      "module": "module.confluence",
      "mode": "managed",
      "type": "kubernetes_storage_class_v1",
      "name": "example",
      "provider": "module.confluence.provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allow_volume_expansion": true,
            "allowed_topologies": [],
            "id": "nfs-sc",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "nfs-sc",
                "resource_version": "12613",
                "uid": "dbd5032d-2fc8-4e1e-b9f1-5e85cb155f0c"
              }
            ],
            "mount_options": [
              "cache=none",
              "dir_mode=0777",
              "file_mode=0700",
              "gid=1000",
              "mfsymlinks",
              "nobrl",
              "uid=1000"
            ],
            "parameters": {
              "type": "pd-standard"
            },
            "reclaim_policy": "Retain",
            "storage_provisioner": "kubernetes.io/gce-pd",
            "volume_binding_mode": "Immediate"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster_auth.cluster",
            "module.eks_cluster.data.aws_availability_zones.available",
            "module.eks_cluster.data.aws_instances.my_worker_nodes",
            "module.eks_cluster.data.aws_subnets.private_subnets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_caller_identity.current",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_partition.current",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_region.current",
            "module.eks_cluster.module.eks.aws_cloudwatch_log_group.this",
            "module.eks_cluster.module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks_cluster.module.eks.aws_eks_addon.before_compute",
            "module.eks_cluster.module.eks.aws_eks_addon.this",
            "module.eks_cluster.module.eks.aws_eks_cluster.this",
            "module.eks_cluster.module.eks.aws_eks_identity_provider_config.this",
            "module.eks_cluster.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks_cluster.module.eks.aws_iam_policy.cluster_encryption",
            "module.eks_cluster.module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node",
            "module.eks_cluster.module.eks.aws_security_group_rule.cluster",
            "module.eks_cluster.module.eks.aws_security_group_rule.node",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_eks_addon_version.this",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.data.tls_certificate.this",
            "module.eks_cluster.module.eks.kubernetes_config_map.aws_auth",
            "module.eks_cluster.module.eks.kubernetes_config_map_v1_data.aws_auth",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.kms.aws_kms_alias.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_grant.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_ami.eks_default",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.time_sleep.this"
          ]
        }
      ]
    },
    {
      "module": "module.confluence",
      "mode": "managed",
      "type": "time_sleep",
      "name": "wait_45_seconds",
      "provider": "provider[\"registry.terraform.io/hashicorp/time\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "create_duration": "45s",
            "destroy_duration": null,
            "id": "2023-07-12T11:24:48Z",
            "triggers": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_add_ons",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "998516096174",
            "arn": "arn:aws:iam::998516096174:user/svc-terraform",
            "id": "998516096174",
            "user_id": "AIDA6Q7BSPSXNVRO46LMO"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_add_ons",
      "mode": "managed",
      "type": "helm_release",
      "name": "external-secrets",
      "provider": "module.eks_add_ons.provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "modules/eks_add_ons/external-secrets",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "external-secrets",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v0.9.0",
                "chart": "external-secrets",
                "name": "external-secrets",
                "namespace": "external-secrets",
                "revision": 1,
                "values": "{\"certController\":{\"serviceAccount\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::998516096174:role/secrets-manager-atlassian-cluster-1-role\"}}},\"installCRDs\":true,\"serviceAccount\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::998516096174:role/secrets-manager-atlassian-cluster-1-role\"}},\"webhook\":{\"port\":9443,\"serviceAccount\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::998516096174:role/secrets-manager-atlassian-cluster-1-role\"}}}}",
                "version": "0.9.0"
              }
            ],
            "name": "external-secrets",
            "namespace": "external-secrets",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "certController.serviceAccount.annotations.eks\\.amazonaws\\.com/role-arn",
                "type": "",
                "value": "arn:aws:iam::998516096174:role/secrets-manager-atlassian-cluster-1-role"
              },
              {
                "name": "installCRDs",
                "type": "",
                "value": "true"
              },
              {
                "name": "serviceAccount.annotations.eks\\.amazonaws\\.com/role-arn",
                "type": "",
                "value": "arn:aws:iam::998516096174:role/secrets-manager-atlassian-cluster-1-role"
              },
              {
                "name": "webhook.port",
                "type": "",
                "value": "9443"
              },
              {
                "name": "webhook.serviceAccount.annotations.eks\\.amazonaws\\.com/role-arn",
                "type": "",
                "value": "arn:aws:iam::998516096174:role/secrets-manager-atlassian-cluster-1-role"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "0.9.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster_auth.cluster",
            "module.eks_add_ons.module.secrets_manager_role.aws_iam_role.this",
            "module.eks_add_ons.module.secrets_manager_role.data.aws_caller_identity.current",
            "module.eks_add_ons.module.secrets_manager_role.data.aws_iam_policy_document.this",
            "module.eks_add_ons.module.secrets_manager_role.data.aws_partition.current",
            "module.eks_cluster.data.aws_availability_zones.available",
            "module.eks_cluster.data.aws_instances.my_worker_nodes",
            "module.eks_cluster.data.aws_subnets.private_subnets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_caller_identity.current",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_partition.current",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_region.current",
            "module.eks_cluster.module.eks.aws_cloudwatch_log_group.this",
            "module.eks_cluster.module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks_cluster.module.eks.aws_eks_addon.before_compute",
            "module.eks_cluster.module.eks.aws_eks_addon.this",
            "module.eks_cluster.module.eks.aws_eks_cluster.this",
            "module.eks_cluster.module.eks.aws_eks_identity_provider_config.this",
            "module.eks_cluster.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks_cluster.module.eks.aws_iam_policy.cluster_encryption",
            "module.eks_cluster.module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node",
            "module.eks_cluster.module.eks.aws_security_group_rule.cluster",
            "module.eks_cluster.module.eks.aws_security_group_rule.node",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_eks_addon_version.this",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.data.tls_certificate.this",
            "module.eks_cluster.module.eks.kubernetes_config_map.aws_auth",
            "module.eks_cluster.module.eks.kubernetes_config_map_v1_data.aws_auth",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.kms.aws_kms_alias.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_grant.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_ami.eks_default",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.time_sleep.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks_add_ons",
      "mode": "managed",
      "type": "helm_release",
      "name": "loadbalancer_controller",
      "provider": "module.eks_add_ons.provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "modules/eks_add_ons/aws-load-balancer-controller",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "aws-load-balancer-controller",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.5.3",
                "chart": "aws-load-balancer-controller",
                "name": "aws-load-balancer-controller",
                "namespace": "kube-system",
                "revision": 1,
                "values": "{\"clusterName\":\"atlassian-cluster-1\",\"enableServiceMutatorWebhook\":false,\"image\":{\"repository\":\"public.ecr.aws/eks/aws-load-balancer-controller\",\"tag\":\"v2.5.2\"},\"region\":\"ap-south-1\",\"serviceAccount\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::998516096174:role/load-balancer-controller-atlassian-cluster-1-role\"},\"create\":true,\"name\":\"aws-load-balancer-controller\"},\"vpcId\":\"vpc-0f851beb2ba287c51\"}",
                "version": "1.5.4"
              }
            ],
            "name": "aws-load-balancer-controller",
            "namespace": "kube-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "clusterName",
                "type": "string",
                "value": "atlassian-cluster-1"
              },
              {
                "name": "enableServiceMutatorWebhook",
                "type": "",
                "value": "false"
              },
              {
                "name": "image.repository",
                "type": "string",
                "value": "public.ecr.aws/eks/aws-load-balancer-controller"
              },
              {
                "name": "image.tag",
                "type": "string",
                "value": "v2.5.2"
              },
              {
                "name": "region",
                "type": "string",
                "value": "ap-south-1"
              },
              {
                "name": "serviceAccount.annotations.eks\\.amazonaws\\.com/role-arn",
                "type": "string",
                "value": "arn:aws:iam::998516096174:role/load-balancer-controller-atlassian-cluster-1-role"
              },
              {
                "name": "serviceAccount.create",
                "type": "",
                "value": "true"
              },
              {
                "name": "serviceAccount.name",
                "type": "string",
                "value": "aws-load-balancer-controller"
              },
              {
                "name": "vpcId",
                "type": "string",
                "value": "vpc-0f851beb2ba287c51"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "1.5.4",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster_auth.cluster",
            "module.eks_add_ons.kubectl_manifest.ingress_class_params",
            "module.eks_add_ons.kubectl_manifest.target_group_bindings",
            "module.eks_add_ons.module.load_balancer_controller_irsa_role.aws_iam_role.this",
            "module.eks_add_ons.module.load_balancer_controller_irsa_role.data.aws_caller_identity.current",
            "module.eks_add_ons.module.load_balancer_controller_irsa_role.data.aws_iam_policy_document.this",
            "module.eks_add_ons.module.load_balancer_controller_irsa_role.data.aws_partition.current",
            "module.eks_cluster.data.aws_availability_zones.available",
            "module.eks_cluster.data.aws_instances.my_worker_nodes",
            "module.eks_cluster.data.aws_subnets.private_subnets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_caller_identity.current",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_partition.current",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_region.current",
            "module.eks_cluster.module.eks.aws_cloudwatch_log_group.this",
            "module.eks_cluster.module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks_cluster.module.eks.aws_eks_addon.before_compute",
            "module.eks_cluster.module.eks.aws_eks_addon.this",
            "module.eks_cluster.module.eks.aws_eks_cluster.this",
            "module.eks_cluster.module.eks.aws_eks_identity_provider_config.this",
            "module.eks_cluster.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks_cluster.module.eks.aws_iam_policy.cluster_encryption",
            "module.eks_cluster.module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node",
            "module.eks_cluster.module.eks.aws_security_group_rule.cluster",
            "module.eks_cluster.module.eks.aws_security_group_rule.node",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_eks_addon_version.this",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.data.tls_certificate.this",
            "module.eks_cluster.module.eks.kubernetes_config_map.aws_auth",
            "module.eks_cluster.module.eks.kubernetes_config_map_v1_data.aws_auth",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.kms.aws_kms_alias.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_grant.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_ami.eks_default",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.time_sleep.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks_add_ons",
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "ingress_class_params",
      "provider": "module.eks_add_ons.provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "apiextensions.k8s.io/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/ingressclassparams.elbv2.k8s.aws",
            "ignore_fields": null,
            "kind": "CustomResourceDefinition",
            "live_manifest_incluster": "122982032ce99d1885b5100e41c085ce8d0456042f6072b8a174fdf6f6bca815",
            "live_uid": "190b0781-7024-46cd-8fb2-0b831d5e1786",
            "name": "ingressclassparams.elbv2.k8s.aws",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "190b0781-7024-46cd-8fb2-0b831d5e1786",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  generation: 1\n  name: ingressclassparams.elbv2.k8s.aws\nspec:\n  conversion:\n    strategy: None\n  group: elbv2.k8s.aws\n  names:\n    kind: IngressClassParams\n    listKind: IngressClassParamsList\n    plural: ingressclassparams\n    singular: ingressclassparams\n  scope: Cluster\n  versions:\n    - additionalPrinterColumns:\n        - description: The Ingress Group name\n          jsonPath: .spec.group.name\n          name: GROUP-NAME\n          type: string\n        - description: The AWS Load Balancer scheme\n          jsonPath: .spec.scheme\n          name: SCHEME\n          type: string\n        - description: The AWS Load Balancer ipAddressType\n          jsonPath: .spec.ipAddressType\n          name: IP-ADDRESS-TYPE\n          type: string\n        - jsonPath: .metadata.creationTimestamp\n          name: AGE\n          type: date\n      name: v1beta1\n      schema:\n        openAPIV3Schema:\n          description: IngressClassParams is the Schema for the IngressClassParams API\n          properties:\n            apiVersion:\n              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n              type: string\n            kind:\n              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n              type: string\n            metadata:\n              type: object\n            spec:\n              description: IngressClassParamsSpec defines the desired state of IngressClassParams\n              properties:\n                group:\n                  description: Group defines the IngressGroup for all Ingresses that belong to IngressClass with this IngressClassParams.\n                  properties:\n                    name:\n                      description: Name is the name of IngressGroup.\n                      type: string\n                  required:\n                    - name\n                  type: object\n                inboundCIDRs:\n                  description: InboundCIDRs specifies the CIDRs that are allowed to access the Ingresses that belong to IngressClass with this IngressClassParams.\n                  items:\n                    type: string\n                  type: array\n                ipAddressType:\n                  description: IPAddressType defines the ip address type for all Ingresses that belong to IngressClass with this IngressClassParams.\n                  enum:\n                    - ipv4\n                    - dualstack\n                  type: string\n                loadBalancerAttributes:\n                  description: LoadBalancerAttributes define the custom attributes to LoadBalancers for all Ingress that that belong to IngressClass with this IngressClassParams.\n                  items:\n                    description: Attributes defines custom attributes on resources.\n                    properties:\n                      key:\n                        description: The key of the attribute.\n                        type: string\n                      value:\n                        description: The value of the attribute.\n                        type: string\n                    required:\n                      - key\n                      - value\n                    type: object\n                  type: array\n                namespaceSelector:\n                  description: NamespaceSelector restrict the namespaces of Ingresses that are allowed to specify the IngressClass with this IngressClassParams. * if absent or present but empty, it selects all namespaces.\n                  properties:\n                    matchExpressions:\n                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.\n                      items:\n                        description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\n                        properties:\n                          key:\n                            description: key is the label key that the selector applies to.\n                            type: string\n                          operator:\n                            description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\n                            type: string\n                          values:\n                            description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\n                            items:\n                              type: string\n                            type: array\n                        required:\n                          - key\n                          - operator\n                        type: object\n                      type: array\n                    matchLabels:\n                      additionalProperties:\n                        type: string\n                      description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n                      type: object\n                  type: object\n                  x-kubernetes-map-type: atomic\n                scheme:\n                  description: Scheme defines the scheme for all Ingresses that belong to IngressClass with this IngressClassParams.\n                  enum:\n                    - internal\n                    - internet-facing\n                  type: string\n                sslPolicy:\n                  description: SSLPolicy specifies the SSL Policy for all Ingresses that belong to IngressClass with this IngressClassParams.\n                  type: string\n                subnets:\n                  description: Subnets defines the subnets for all Ingresses that belong to IngressClass with this IngressClassParams.\n                  properties:\n                    ids:\n                      description: IDs specify the resource IDs of subnets. Exactly one of this or `tags` must be specified.\n                      items:\n                        description: SubnetID specifies a subnet ID.\n                        pattern: subnet-[0-9a-f]+\n                        type: string\n                      minItems: 1\n                      type: array\n                    tags:\n                      additionalProperties:\n                        items:\n                          type: string\n                        type: array\n                      description: Tags specifies subnets in the load balancer's VPC where each tag specified in the map key contains one of the values in the corresponding value list. Exactly one of this or `ids` must be specified.\n                      type: object\n                  type: object\n                tags:\n                  description: Tags defines list of Tags on AWS resources provisioned for Ingresses that belong to IngressClass with this IngressClassParams.\n                  items:\n                    description: Tag defines a AWS Tag on resources.\n                    properties:\n                      key:\n                        description: The key of the tag.\n                        type: string\n                      value:\n                        description: The value of the tag.\n                        type: string\n                    required:\n                      - key\n                      - value\n                    type: object\n                  type: array\n              type: object\n          type: object\n      served: true\n      storage: true\n      subresources: {}\nstatus:\n  acceptedNames:\n    kind: IngressClassParams\n    listKind: IngressClassParamsList\n    plural: ingressclassparams\n    singular: ingressclassparams\n  conditions:\n    - message: no conflicts found\n      reason: NoConflicts\n      status: \"True\"\n      type: NamesAccepted\n    - message: the initial names have been accepted\n      reason: InitialNamesAccepted\n      status: \"True\"\n      type: Established\n  storedVersions:\n    - v1beta1",
            "yaml_body_parsed": "apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  generation: 1\n  name: ingressclassparams.elbv2.k8s.aws\nspec:\n  conversion:\n    strategy: None\n  group: elbv2.k8s.aws\n  names:\n    kind: IngressClassParams\n    listKind: IngressClassParamsList\n    plural: ingressclassparams\n    singular: ingressclassparams\n  scope: Cluster\n  versions:\n  - additionalPrinterColumns:\n    - description: The Ingress Group name\n      jsonPath: .spec.group.name\n      name: GROUP-NAME\n      type: string\n    - description: The AWS Load Balancer scheme\n      jsonPath: .spec.scheme\n      name: SCHEME\n      type: string\n    - description: The AWS Load Balancer ipAddressType\n      jsonPath: .spec.ipAddressType\n      name: IP-ADDRESS-TYPE\n      type: string\n    - jsonPath: .metadata.creationTimestamp\n      name: AGE\n      type: date\n    name: v1beta1\n    schema:\n      openAPIV3Schema:\n        description: IngressClassParams is the Schema for the IngressClassParams API\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: IngressClassParamsSpec defines the desired state of IngressClassParams\n            properties:\n              group:\n                description: Group defines the IngressGroup for all Ingresses that\n                  belong to IngressClass with this IngressClassParams.\n                properties:\n                  name:\n                    description: Name is the name of IngressGroup.\n                    type: string\n                required:\n                - name\n                type: object\n              inboundCIDRs:\n                description: InboundCIDRs specifies the CIDRs that are allowed to\n                  access the Ingresses that belong to IngressClass with this IngressClassParams.\n                items:\n                  type: string\n                type: array\n              ipAddressType:\n                description: IPAddressType defines the ip address type for all Ingresses\n                  that belong to IngressClass with this IngressClassParams.\n                enum:\n                - ipv4\n                - dualstack\n                type: string\n              loadBalancerAttributes:\n                description: LoadBalancerAttributes define the custom attributes to\n                  LoadBalancers for all Ingress that that belong to IngressClass with\n                  this IngressClassParams.\n                items:\n                  description: Attributes defines custom attributes on resources.\n                  properties:\n                    key:\n                      description: The key of the attribute.\n                      type: string\n                    value:\n                      description: The value of the attribute.\n                      type: string\n                  required:\n                  - key\n                  - value\n                  type: object\n                type: array\n              namespaceSelector:\n                description: NamespaceSelector restrict the namespaces of Ingresses\n                  that are allowed to specify the IngressClass with this IngressClassParams.\n                  * if absent or present but empty, it selects all namespaces.\n                properties:\n                  matchExpressions:\n                    description: matchExpressions is a list of label selector requirements.\n                      The requirements are ANDed.\n                    items:\n                      description: A label selector requirement is a selector that\n                        contains values, a key, and an operator that relates the key\n                        and values.\n                      properties:\n                        key:\n                          description: key is the label key that the selector applies\n                            to.\n                          type: string\n                        operator:\n                          description: operator represents a key's relationship to\n                            a set of values. Valid operators are In, NotIn, Exists\n                            and DoesNotExist.\n                          type: string\n                        values:\n                          description: values is an array of string values. If the\n                            operator is In or NotIn, the values array must be non-empty.\n                            If the operator is Exists or DoesNotExist, the values\n                            array must be empty. This array is replaced during a strategic\n                            merge patch.\n                          items:\n                            type: string\n                          type: array\n                      required:\n                      - key\n                      - operator\n                      type: object\n                    type: array\n                  matchLabels:\n                    additionalProperties:\n                      type: string\n                    description: matchLabels is a map of {key,value} pairs. A single\n                      {key,value} in the matchLabels map is equivalent to an element\n                      of matchExpressions, whose key field is \"key\", the operator\n                      is \"In\", and the values array contains only \"value\". The requirements\n                      are ANDed.\n                    type: object\n                type: object\n                x-kubernetes-map-type: atomic\n              scheme:\n                description: Scheme defines the scheme for all Ingresses that belong\n                  to IngressClass with this IngressClassParams.\n                enum:\n                - internal\n                - internet-facing\n                type: string\n              sslPolicy:\n                description: SSLPolicy specifies the SSL Policy for all Ingresses\n                  that belong to IngressClass with this IngressClassParams.\n                type: string\n              subnets:\n                description: Subnets defines the subnets for all Ingresses that belong\n                  to IngressClass with this IngressClassParams.\n                properties:\n                  ids:\n                    description: IDs specify the resource IDs of subnets. Exactly\n                      one of this or `tags` must be specified.\n                    items:\n                      description: SubnetID specifies a subnet ID.\n                      pattern: subnet-[0-9a-f]+\n                      type: string\n                    minItems: 1\n                    type: array\n                  tags:\n                    additionalProperties:\n                      items:\n                        type: string\n                      type: array\n                    description: Tags specifies subnets in the load balancer's VPC\n                      where each tag specified in the map key contains one of the\n                      values in the corresponding value list. Exactly one of this\n                      or `ids` must be specified.\n                    type: object\n                type: object\n              tags:\n                description: Tags defines list of Tags on AWS resources provisioned\n                  for Ingresses that belong to IngressClass with this IngressClassParams.\n                items:\n                  description: Tag defines a AWS Tag on resources.\n                  properties:\n                    key:\n                      description: The key of the tag.\n                      type: string\n                    value:\n                      description: The value of the tag.\n                      type: string\n                  required:\n                  - key\n                  - value\n                  type: object\n                type: array\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources: {}\nstatus:\n  acceptedNames:\n    kind: IngressClassParams\n    listKind: IngressClassParamsList\n    plural: ingressclassparams\n    singular: ingressclassparams\n  conditions:\n  - message: no conflicts found\n    reason: NoConflicts\n    status: \"True\"\n    type: NamesAccepted\n  - message: the initial names have been accepted\n    reason: InitialNamesAccepted\n    status: \"True\"\n    type: Established\n  storedVersions:\n  - v1beta1\n",
            "yaml_incluster": "122982032ce99d1885b5100e41c085ce8d0456042f6072b8a174fdf6f6bca815"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster_auth.cluster",
            "module.eks_cluster.data.aws_availability_zones.available",
            "module.eks_cluster.data.aws_instances.my_worker_nodes",
            "module.eks_cluster.data.aws_subnets.private_subnets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_caller_identity.current",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_partition.current",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_region.current",
            "module.eks_cluster.module.eks.aws_cloudwatch_log_group.this",
            "module.eks_cluster.module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks_cluster.module.eks.aws_eks_addon.before_compute",
            "module.eks_cluster.module.eks.aws_eks_addon.this",
            "module.eks_cluster.module.eks.aws_eks_cluster.this",
            "module.eks_cluster.module.eks.aws_eks_identity_provider_config.this",
            "module.eks_cluster.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks_cluster.module.eks.aws_iam_policy.cluster_encryption",
            "module.eks_cluster.module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node",
            "module.eks_cluster.module.eks.aws_security_group_rule.cluster",
            "module.eks_cluster.module.eks.aws_security_group_rule.node",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_eks_addon_version.this",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.data.tls_certificate.this",
            "module.eks_cluster.module.eks.kubernetes_config_map.aws_auth",
            "module.eks_cluster.module.eks.kubernetes_config_map_v1_data.aws_auth",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.kms.aws_kms_alias.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_grant.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_ami.eks_default",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.time_sleep.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks_add_ons",
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "target_group_bindings",
      "provider": "module.eks_add_ons.provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "apiextensions.k8s.io/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apiextensions.k8s.io/v1/customresourcedefinitions/targetgroupbindings.elbv2.k8s.aws",
            "ignore_fields": null,
            "kind": "CustomResourceDefinition",
            "live_manifest_incluster": "53619153c94d9b9161e2ab59174a8d5631ea2e594a803ee129ae7a6ac9d39bbd",
            "live_uid": "16386549-1001-4e84-acb7-0877ac9bd5b2",
            "name": "targetgroupbindings.elbv2.k8s.aws",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "16386549-1001-4e84-acb7-0877ac9bd5b2",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  generation: 1\n  name: targetgroupbindings.elbv2.k8s.aws\nspec:\n  conversion:\n    strategy: None\n  group: elbv2.k8s.aws\n  names:\n    kind: TargetGroupBinding\n    listKind: TargetGroupBindingList\n    plural: targetgroupbindings\n    singular: targetgroupbinding\n  scope: Namespaced\n  versions:\n    - additionalPrinterColumns:\n        - description: The Kubernetes Service's name\n          jsonPath: .spec.serviceRef.name\n          name: SERVICE-NAME\n          type: string\n        - description: The Kubernetes Service's port\n          jsonPath: .spec.serviceRef.port\n          name: SERVICE-PORT\n          type: string\n        - description: The AWS TargetGroup's TargetType\n          jsonPath: .spec.targetType\n          name: TARGET-TYPE\n          type: string\n        - description: The AWS TargetGroup's Amazon Resource Name\n          jsonPath: .spec.targetGroupARN\n          name: ARN\n          priority: 1\n          type: string\n        - jsonPath: .metadata.creationTimestamp\n          name: AGE\n          type: date\n      name: v1alpha1\n      schema:\n        openAPIV3Schema:\n          description: TargetGroupBinding is the Schema for the TargetGroupBinding API\n          properties:\n            apiVersion:\n              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n              type: string\n            kind:\n              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n              type: string\n            metadata:\n              type: object\n            spec:\n              description: TargetGroupBindingSpec defines the desired state of TargetGroupBinding\n              properties:\n                networking:\n                  description: networking provides the networking setup for ELBV2 LoadBalancer to access targets in TargetGroup.\n                  properties:\n                    ingress:\n                      description: List of ingress rules to allow ELBV2 LoadBalancer to access targets in TargetGroup.\n                      items:\n                        properties:\n                          from:\n                            description: List of peers which should be able to access the targets in TargetGroup. At least one NetworkingPeer should be specified.\n                            items:\n                              description: NetworkingPeer defines the source/destination peer for networking rules.\n                              properties:\n                                ipBlock:\n                                  description: IPBlock defines an IPBlock peer. If specified, none of the other fields can be set.\n                                  properties:\n                                    cidr:\n                                      description: CIDR is the network CIDR. Both IPV4 or IPV6 CIDR are accepted.\n                                      type: string\n                                  required:\n                                    - cidr\n                                  type: object\n                                securityGroup:\n                                  description: SecurityGroup defines a SecurityGroup peer. If specified, none of the other fields can be set.\n                                  properties:\n                                    groupID:\n                                      description: GroupID is the EC2 SecurityGroupID.\n                                      type: string\n                                  required:\n                                    - groupID\n                                  type: object\n                              type: object\n                            type: array\n                          ports:\n                            description: List of ports which should be made accessible on the targets in TargetGroup. If ports is empty or unspecified, it defaults to all ports with TCP.\n                            items:\n                              properties:\n                                port:\n                                  anyOf:\n                                    - type: integer\n                                    - type: string\n                                  description: The port which traffic must match. When NodePort endpoints(instance TargetType) is used, this must be a numerical port. When Port endpoints(ip TargetType) is used, this can be either numerical or named port on pods. if port is unspecified, it defaults to all ports.\n                                  x-kubernetes-int-or-string: true\n                                protocol:\n                                  description: The protocol which traffic must match. If protocol is unspecified, it defaults to TCP.\n                                  enum:\n                                    - TCP\n                                    - UDP\n                                  type: string\n                              type: object\n                            type: array\n                        required:\n                          - from\n                          - ports\n                        type: object\n                      type: array\n                  type: object\n                serviceRef:\n                  description: serviceRef is a reference to a Kubernetes Service and ServicePort.\n                  properties:\n                    name:\n                      description: Name is the name of the Service.\n                      type: string\n                    port:\n                      anyOf:\n                        - type: integer\n                        - type: string\n                      description: Port is the port of the ServicePort.\n                      x-kubernetes-int-or-string: true\n                  required:\n                    - name\n                    - port\n                  type: object\n                targetGroupARN:\n                  description: targetGroupARN is the Amazon Resource Name (ARN) for the TargetGroup.\n                  type: string\n                targetType:\n                  description: targetType is the TargetType of TargetGroup. If unspecified, it will be automatically inferred.\n                  enum:\n                    - instance\n                    - ip\n                  type: string\n              required:\n                - serviceRef\n                - targetGroupARN\n              type: object\n            status:\n              description: TargetGroupBindingStatus defines the observed state of TargetGroupBinding\n              properties:\n                observedGeneration:\n                  description: The generation observed by the TargetGroupBinding controller.\n                  format: int64\n                  type: integer\n              type: object\n          type: object\n      served: true\n      storage: false\n      subresources:\n        status: {}\n    - additionalPrinterColumns:\n        - description: The Kubernetes Service's name\n          jsonPath: .spec.serviceRef.name\n          name: SERVICE-NAME\n          type: string\n        - description: The Kubernetes Service's port\n          jsonPath: .spec.serviceRef.port\n          name: SERVICE-PORT\n          type: string\n        - description: The AWS TargetGroup's TargetType\n          jsonPath: .spec.targetType\n          name: TARGET-TYPE\n          type: string\n        - description: The AWS TargetGroup's Amazon Resource Name\n          jsonPath: .spec.targetGroupARN\n          name: ARN\n          priority: 1\n          type: string\n        - jsonPath: .metadata.creationTimestamp\n          name: AGE\n          type: date\n      name: v1beta1\n      schema:\n        openAPIV3Schema:\n          description: TargetGroupBinding is the Schema for the TargetGroupBinding API\n          properties:\n            apiVersion:\n              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n              type: string\n            kind:\n              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n              type: string\n            metadata:\n              type: object\n            spec:\n              description: TargetGroupBindingSpec defines the desired state of TargetGroupBinding\n              properties:\n                ipAddressType:\n                  description: ipAddressType specifies whether the target group is of type IPv4 or IPv6. If unspecified, it will be automatically inferred.\n                  enum:\n                    - ipv4\n                    - ipv6\n                  type: string\n                networking:\n                  description: networking defines the networking rules to allow ELBV2 LoadBalancer to access targets in TargetGroup.\n                  properties:\n                    ingress:\n                      description: List of ingress rules to allow ELBV2 LoadBalancer to access targets in TargetGroup.\n                      items:\n                        description: NetworkingIngressRule defines a particular set of traffic that is allowed to access TargetGroup's targets.\n                        properties:\n                          from:\n                            description: List of peers which should be able to access the targets in TargetGroup. At least one NetworkingPeer should be specified.\n                            items:\n                              description: NetworkingPeer defines the source/destination peer for networking rules.\n                              properties:\n                                ipBlock:\n                                  description: IPBlock defines an IPBlock peer. If specified, none of the other fields can be set.\n                                  properties:\n                                    cidr:\n                                      description: CIDR is the network CIDR. Both IPV4 or IPV6 CIDR are accepted.\n                                      type: string\n                                  required:\n                                    - cidr\n                                  type: object\n                                securityGroup:\n                                  description: SecurityGroup defines a SecurityGroup peer. If specified, none of the other fields can be set.\n                                  properties:\n                                    groupID:\n                                      description: GroupID is the EC2 SecurityGroupID.\n                                      type: string\n                                  required:\n                                    - groupID\n                                  type: object\n                              type: object\n                            type: array\n                          ports:\n                            description: List of ports which should be made accessible on the targets in TargetGroup. If ports is empty or unspecified, it defaults to all ports with TCP.\n                            items:\n                              description: NetworkingPort defines the port and protocol for networking rules.\n                              properties:\n                                port:\n                                  anyOf:\n                                    - type: integer\n                                    - type: string\n                                  description: The port which traffic must match. When NodePort endpoints(instance TargetType) is used, this must be a numerical port. When Port endpoints(ip TargetType) is used, this can be either numerical or named port on pods. if port is unspecified, it defaults to all ports.\n                                  x-kubernetes-int-or-string: true\n                                protocol:\n                                  description: The protocol which traffic must match. If protocol is unspecified, it defaults to TCP.\n                                  enum:\n                                    - TCP\n                                    - UDP\n                                  type: string\n                              type: object\n                            type: array\n                        required:\n                          - from\n                          - ports\n                        type: object\n                      type: array\n                  type: object\n                nodeSelector:\n                  description: node selector for instance type target groups to only register certain nodes\n                  properties:\n                    matchExpressions:\n                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.\n                      items:\n                        description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\n                        properties:\n                          key:\n                            description: key is the label key that the selector applies to.\n                            type: string\n                          operator:\n                            description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\n                            type: string\n                          values:\n                            description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\n                            items:\n                              type: string\n                            type: array\n                        required:\n                          - key\n                          - operator\n                        type: object\n                      type: array\n                    matchLabels:\n                      additionalProperties:\n                        type: string\n                      description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n                      type: object\n                  type: object\n                  x-kubernetes-map-type: atomic\n                serviceRef:\n                  description: serviceRef is a reference to a Kubernetes Service and ServicePort.\n                  properties:\n                    name:\n                      description: Name is the name of the Service.\n                      type: string\n                    port:\n                      anyOf:\n                        - type: integer\n                        - type: string\n                      description: Port is the port of the ServicePort.\n                      x-kubernetes-int-or-string: true\n                  required:\n                    - name\n                    - port\n                  type: object\n                targetGroupARN:\n                  description: targetGroupARN is the Amazon Resource Name (ARN) for the TargetGroup.\n                  minLength: 1\n                  type: string\n                targetType:\n                  description: targetType is the TargetType of TargetGroup. If unspecified, it will be automatically inferred.\n                  enum:\n                    - instance\n                    - ip\n                  type: string\n              required:\n                - serviceRef\n                - targetGroupARN\n              type: object\n            status:\n              description: TargetGroupBindingStatus defines the observed state of TargetGroupBinding\n              properties:\n                observedGeneration:\n                  description: The generation observed by the TargetGroupBinding controller.\n                  format: int64\n                  type: integer\n              type: object\n          type: object\n      served: true\n      storage: true\n      subresources:\n        status: {}\nstatus:\n  acceptedNames:\n    kind: TargetGroupBinding\n    listKind: TargetGroupBindingList\n    plural: targetgroupbindings\n    singular: targetgroupbinding\n  conditions:\n    - message: no conflicts found\n      reason: NoConflicts\n      status: \"True\"\n      type: NamesAccepted\n    - message: the initial names have been accepted\n      reason: InitialNamesAccepted\n      status: \"True\"\n      type: Established\n  storedVersions:\n    - v1beta1",
            "yaml_body_parsed": "apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  generation: 1\n  name: targetgroupbindings.elbv2.k8s.aws\nspec:\n  conversion:\n    strategy: None\n  group: elbv2.k8s.aws\n  names:\n    kind: TargetGroupBinding\n    listKind: TargetGroupBindingList\n    plural: targetgroupbindings\n    singular: targetgroupbinding\n  scope: Namespaced\n  versions:\n  - additionalPrinterColumns:\n    - description: The Kubernetes Service's name\n      jsonPath: .spec.serviceRef.name\n      name: SERVICE-NAME\n      type: string\n    - description: The Kubernetes Service's port\n      jsonPath: .spec.serviceRef.port\n      name: SERVICE-PORT\n      type: string\n    - description: The AWS TargetGroup's TargetType\n      jsonPath: .spec.targetType\n      name: TARGET-TYPE\n      type: string\n    - description: The AWS TargetGroup's Amazon Resource Name\n      jsonPath: .spec.targetGroupARN\n      name: ARN\n      priority: 1\n      type: string\n    - jsonPath: .metadata.creationTimestamp\n      name: AGE\n      type: date\n    name: v1alpha1\n    schema:\n      openAPIV3Schema:\n        description: TargetGroupBinding is the Schema for the TargetGroupBinding API\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: TargetGroupBindingSpec defines the desired state of TargetGroupBinding\n            properties:\n              networking:\n                description: networking provides the networking setup for ELBV2 LoadBalancer\n                  to access targets in TargetGroup.\n                properties:\n                  ingress:\n                    description: List of ingress rules to allow ELBV2 LoadBalancer\n                      to access targets in TargetGroup.\n                    items:\n                      properties:\n                        from:\n                          description: List of peers which should be able to access\n                            the targets in TargetGroup. At least one NetworkingPeer\n                            should be specified.\n                          items:\n                            description: NetworkingPeer defines the source/destination\n                              peer for networking rules.\n                            properties:\n                              ipBlock:\n                                description: IPBlock defines an IPBlock peer. If specified,\n                                  none of the other fields can be set.\n                                properties:\n                                  cidr:\n                                    description: CIDR is the network CIDR. Both IPV4\n                                      or IPV6 CIDR are accepted.\n                                    type: string\n                                required:\n                                - cidr\n                                type: object\n                              securityGroup:\n                                description: SecurityGroup defines a SecurityGroup\n                                  peer. If specified, none of the other fields can\n                                  be set.\n                                properties:\n                                  groupID:\n                                    description: GroupID is the EC2 SecurityGroupID.\n                                    type: string\n                                required:\n                                - groupID\n                                type: object\n                            type: object\n                          type: array\n                        ports:\n                          description: List of ports which should be made accessible\n                            on the targets in TargetGroup. If ports is empty or unspecified,\n                            it defaults to all ports with TCP.\n                          items:\n                            properties:\n                              port:\n                                anyOf:\n                                - type: integer\n                                - type: string\n                                description: The port which traffic must match. When\n                                  NodePort endpoints(instance TargetType) is used,\n                                  this must be a numerical port. When Port endpoints(ip\n                                  TargetType) is used, this can be either numerical\n                                  or named port on pods. if port is unspecified, it\n                                  defaults to all ports.\n                                x-kubernetes-int-or-string: true\n                              protocol:\n                                description: The protocol which traffic must match.\n                                  If protocol is unspecified, it defaults to TCP.\n                                enum:\n                                - TCP\n                                - UDP\n                                type: string\n                            type: object\n                          type: array\n                      required:\n                      - from\n                      - ports\n                      type: object\n                    type: array\n                type: object\n              serviceRef:\n                description: serviceRef is a reference to a Kubernetes Service and\n                  ServicePort.\n                properties:\n                  name:\n                    description: Name is the name of the Service.\n                    type: string\n                  port:\n                    anyOf:\n                    - type: integer\n                    - type: string\n                    description: Port is the port of the ServicePort.\n                    x-kubernetes-int-or-string: true\n                required:\n                - name\n                - port\n                type: object\n              targetGroupARN:\n                description: targetGroupARN is the Amazon Resource Name (ARN) for\n                  the TargetGroup.\n                type: string\n              targetType:\n                description: targetType is the TargetType of TargetGroup. If unspecified,\n                  it will be automatically inferred.\n                enum:\n                - instance\n                - ip\n                type: string\n            required:\n            - serviceRef\n            - targetGroupARN\n            type: object\n          status:\n            description: TargetGroupBindingStatus defines the observed state of TargetGroupBinding\n            properties:\n              observedGeneration:\n                description: The generation observed by the TargetGroupBinding controller.\n                format: int64\n                type: integer\n            type: object\n        type: object\n    served: true\n    storage: false\n    subresources:\n      status: {}\n  - additionalPrinterColumns:\n    - description: The Kubernetes Service's name\n      jsonPath: .spec.serviceRef.name\n      name: SERVICE-NAME\n      type: string\n    - description: The Kubernetes Service's port\n      jsonPath: .spec.serviceRef.port\n      name: SERVICE-PORT\n      type: string\n    - description: The AWS TargetGroup's TargetType\n      jsonPath: .spec.targetType\n      name: TARGET-TYPE\n      type: string\n    - description: The AWS TargetGroup's Amazon Resource Name\n      jsonPath: .spec.targetGroupARN\n      name: ARN\n      priority: 1\n      type: string\n    - jsonPath: .metadata.creationTimestamp\n      name: AGE\n      type: date\n    name: v1beta1\n    schema:\n      openAPIV3Schema:\n        description: TargetGroupBinding is the Schema for the TargetGroupBinding API\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: TargetGroupBindingSpec defines the desired state of TargetGroupBinding\n            properties:\n              ipAddressType:\n                description: ipAddressType specifies whether the target group is of\n                  type IPv4 or IPv6. If unspecified, it will be automatically inferred.\n                enum:\n                - ipv4\n                - ipv6\n                type: string\n              networking:\n                description: networking defines the networking rules to allow ELBV2\n                  LoadBalancer to access targets in TargetGroup.\n                properties:\n                  ingress:\n                    description: List of ingress rules to allow ELBV2 LoadBalancer\n                      to access targets in TargetGroup.\n                    items:\n                      description: NetworkingIngressRule defines a particular set\n                        of traffic that is allowed to access TargetGroup's targets.\n                      properties:\n                        from:\n                          description: List of peers which should be able to access\n                            the targets in TargetGroup. At least one NetworkingPeer\n                            should be specified.\n                          items:\n                            description: NetworkingPeer defines the source/destination\n                              peer for networking rules.\n                            properties:\n                              ipBlock:\n                                description: IPBlock defines an IPBlock peer. If specified,\n                                  none of the other fields can be set.\n                                properties:\n                                  cidr:\n                                    description: CIDR is the network CIDR. Both IPV4\n                                      or IPV6 CIDR are accepted.\n                                    type: string\n                                required:\n                                - cidr\n                                type: object\n                              securityGroup:\n                                description: SecurityGroup defines a SecurityGroup\n                                  peer. If specified, none of the other fields can\n                                  be set.\n                                properties:\n                                  groupID:\n                                    description: GroupID is the EC2 SecurityGroupID.\n                                    type: string\n                                required:\n                                - groupID\n                                type: object\n                            type: object\n                          type: array\n                        ports:\n                          description: List of ports which should be made accessible\n                            on the targets in TargetGroup. If ports is empty or unspecified,\n                            it defaults to all ports with TCP.\n                          items:\n                            description: NetworkingPort defines the port and protocol\n                              for networking rules.\n                            properties:\n                              port:\n                                anyOf:\n                                - type: integer\n                                - type: string\n                                description: The port which traffic must match. When\n                                  NodePort endpoints(instance TargetType) is used,\n                                  this must be a numerical port. When Port endpoints(ip\n                                  TargetType) is used, this can be either numerical\n                                  or named port on pods. if port is unspecified, it\n                                  defaults to all ports.\n                                x-kubernetes-int-or-string: true\n                              protocol:\n                                description: The protocol which traffic must match.\n                                  If protocol is unspecified, it defaults to TCP.\n                                enum:\n                                - TCP\n                                - UDP\n                                type: string\n                            type: object\n                          type: array\n                      required:\n                      - from\n                      - ports\n                      type: object\n                    type: array\n                type: object\n              nodeSelector:\n                description: node selector for instance type target groups to only\n                  register certain nodes\n                properties:\n                  matchExpressions:\n                    description: matchExpressions is a list of label selector requirements.\n                      The requirements are ANDed.\n                    items:\n                      description: A label selector requirement is a selector that\n                        contains values, a key, and an operator that relates the key\n                        and values.\n                      properties:\n                        key:\n                          description: key is the label key that the selector applies\n                            to.\n                          type: string\n                        operator:\n                          description: operator represents a key's relationship to\n                            a set of values. Valid operators are In, NotIn, Exists\n                            and DoesNotExist.\n                          type: string\n                        values:\n                          description: values is an array of string values. If the\n                            operator is In or NotIn, the values array must be non-empty.\n                            If the operator is Exists or DoesNotExist, the values\n                            array must be empty. This array is replaced during a strategic\n                            merge patch.\n                          items:\n                            type: string\n                          type: array\n                      required:\n                      - key\n                      - operator\n                      type: object\n                    type: array\n                  matchLabels:\n                    additionalProperties:\n                      type: string\n                    description: matchLabels is a map of {key,value} pairs. A single\n                      {key,value} in the matchLabels map is equivalent to an element\n                      of matchExpressions, whose key field is \"key\", the operator\n                      is \"In\", and the values array contains only \"value\". The requirements\n                      are ANDed.\n                    type: object\n                type: object\n                x-kubernetes-map-type: atomic\n              serviceRef:\n                description: serviceRef is a reference to a Kubernetes Service and\n                  ServicePort.\n                properties:\n                  name:\n                    description: Name is the name of the Service.\n                    type: string\n                  port:\n                    anyOf:\n                    - type: integer\n                    - type: string\n                    description: Port is the port of the ServicePort.\n                    x-kubernetes-int-or-string: true\n                required:\n                - name\n                - port\n                type: object\n              targetGroupARN:\n                description: targetGroupARN is the Amazon Resource Name (ARN) for\n                  the TargetGroup.\n                minLength: 1\n                type: string\n              targetType:\n                description: targetType is the TargetType of TargetGroup. If unspecified,\n                  it will be automatically inferred.\n                enum:\n                - instance\n                - ip\n                type: string\n            required:\n            - serviceRef\n            - targetGroupARN\n            type: object\n          status:\n            description: TargetGroupBindingStatus defines the observed state of TargetGroupBinding\n            properties:\n              observedGeneration:\n                description: The generation observed by the TargetGroupBinding controller.\n                format: int64\n                type: integer\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources:\n      status: {}\nstatus:\n  acceptedNames:\n    kind: TargetGroupBinding\n    listKind: TargetGroupBindingList\n    plural: targetgroupbindings\n    singular: targetgroupbinding\n  conditions:\n  - message: no conflicts found\n    reason: NoConflicts\n    status: \"True\"\n    type: NamesAccepted\n  - message: the initial names have been accepted\n    reason: InitialNamesAccepted\n    status: \"True\"\n    type: Established\n  storedVersions:\n  - v1beta1\n",
            "yaml_incluster": "53619153c94d9b9161e2ab59174a8d5631ea2e594a803ee129ae7a6ac9d39bbd"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster_auth.cluster",
            "module.eks_cluster.data.aws_availability_zones.available",
            "module.eks_cluster.data.aws_instances.my_worker_nodes",
            "module.eks_cluster.data.aws_subnets.private_subnets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role_policy_attachment.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_caller_identity.current",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.amazon_managed_service_prometheus",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.appmesh_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.appmesh_envoy_proxy",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.aws_gateway_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.cert_manager",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.cluster_autoscaler",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.efs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.external_dns",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.external_secrets",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.fsx_lustre_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.karpenter_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.load_balancer_controller",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.load_balancer_controller_targetgroup_only",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.node_termination_handler",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.velero",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.vpc_cni",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_partition.current",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_region.current",
            "module.eks_cluster.module.eks.aws_cloudwatch_log_group.this",
            "module.eks_cluster.module.eks.aws_ec2_tag.cluster_primary_security_group",
            "module.eks_cluster.module.eks.aws_eks_addon.before_compute",
            "module.eks_cluster.module.eks.aws_eks_addon.this",
            "module.eks_cluster.module.eks.aws_eks_cluster.this",
            "module.eks_cluster.module.eks.aws_eks_identity_provider_config.this",
            "module.eks_cluster.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks_cluster.module.eks.aws_iam_policy.cluster_encryption",
            "module.eks_cluster.module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.cluster_encryption",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node",
            "module.eks_cluster.module.eks.aws_security_group_rule.cluster",
            "module.eks_cluster.module.eks.aws_security_group_rule.node",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_eks_addon_version.this",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.data.tls_certificate.this",
            "module.eks_cluster.module.eks.kubernetes_config_map.aws_auth",
            "module.eks_cluster.module.eks.kubernetes_config_map_v1_data.aws_auth",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.kms.aws_kms_alias.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_grant.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_ami.eks_default",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.time_sleep.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks_add_ons.module.load_balancer_controller_irsa_role",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "998516096174",
            "arn": "arn:aws:iam::998516096174:user/svc-terraform",
            "id": "998516096174",
            "user_id": "AIDA6Q7BSPSXNVRO46LMO"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_add_ons.module.load_balancer_controller_irsa_role",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "load_balancer_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3682564123",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:CreateServiceLinkedRole\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"iam:AWSServiceName\": \"elasticloadbalancing.amazonaws.com\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:DescribeTargetHealth\",\n        \"elasticloadbalancing:DescribeTargetGroups\",\n        \"elasticloadbalancing:DescribeTargetGroupAttributes\",\n        \"elasticloadbalancing:DescribeTags\",\n        \"elasticloadbalancing:DescribeSSLPolicies\",\n        \"elasticloadbalancing:DescribeRules\",\n        \"elasticloadbalancing:DescribeLoadBalancers\",\n        \"elasticloadbalancing:DescribeLoadBalancerAttributes\",\n        \"elasticloadbalancing:DescribeListeners\",\n        \"elasticloadbalancing:DescribeListenerCertificates\",\n        \"ec2:GetCoipPoolUsage\",\n        \"ec2:DescribeVpcs\",\n        \"ec2:DescribeVpcPeeringConnections\",\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeSubnets\",\n        \"ec2:DescribeSecurityGroups\",\n        \"ec2:DescribeNetworkInterfaces\",\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeInstances\",\n        \"ec2:DescribeCoipPools\",\n        \"ec2:DescribeAvailabilityZones\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"wafv2:GetWebACLForResource\",\n        \"wafv2:GetWebACL\",\n        \"wafv2:DisassociateWebACL\",\n        \"wafv2:AssociateWebACL\",\n        \"waf-regional:GetWebACLForResource\",\n        \"waf-regional:GetWebACL\",\n        \"waf-regional:DisassociateWebACL\",\n        \"waf-regional:AssociateWebACL\",\n        \"shield:GetSubscriptionState\",\n        \"shield:DescribeProtection\",\n        \"shield:DeleteProtection\",\n        \"shield:CreateProtection\",\n        \"iam:ListServerCertificates\",\n        \"iam:GetServerCertificate\",\n        \"cognito-idp:DescribeUserPoolClient\",\n        \"acm:ListCertificates\",\n        \"acm:DescribeCertificate\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:RevokeSecurityGroupIngress\",\n        \"ec2:CreateSecurityGroup\",\n        \"ec2:AuthorizeSecurityGroupIngress\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateTags\",\n      \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        },\n        \"StringEquals\": {\n          \"ec2:CreateAction\": \"CreateSecurityGroup\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteTags\",\n        \"ec2:CreateTags\"\n      ],\n      \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:RevokeSecurityGroupIngress\",\n        \"ec2:DeleteSecurityGroup\",\n        \"ec2:AuthorizeSecurityGroupIngress\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:CreateTargetGroup\",\n        \"elasticloadbalancing:CreateLoadBalancer\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:DeleteRule\",\n        \"elasticloadbalancing:DeleteListener\",\n        \"elasticloadbalancing:CreateRule\",\n        \"elasticloadbalancing:CreateListener\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RemoveTags\",\n        \"elasticloadbalancing:AddTags\"\n      ],\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n      ],\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RemoveTags\",\n        \"elasticloadbalancing:AddTags\"\n      ],\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:SetSubnets\",\n        \"elasticloadbalancing:SetSecurityGroups\",\n        \"elasticloadbalancing:SetIpAddressType\",\n        \"elasticloadbalancing:ModifyTargetGroupAttributes\",\n        \"elasticloadbalancing:ModifyTargetGroup\",\n        \"elasticloadbalancing:ModifyLoadBalancerAttributes\",\n        \"elasticloadbalancing:DeleteTargetGroup\",\n        \"elasticloadbalancing:DeleteLoadBalancer\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"elasticloadbalancing:AddTags\",\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n      ],\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        },\n        \"StringEquals\": {\n          \"elasticloadbalancing:CreateAction\": [\n            \"CreateTargetGroup\",\n            \"CreateLoadBalancer\"\n          ]\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RegisterTargets\",\n        \"elasticloadbalancing:DeregisterTargets\"\n      ],\n      \"Resource\": \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:SetWebAcl\",\n        \"elasticloadbalancing:RemoveListenerCertificates\",\n        \"elasticloadbalancing:ModifyRule\",\n        \"elasticloadbalancing:ModifyListener\",\n        \"elasticloadbalancing:AddListenerCertificates\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "iam:CreateServiceLinkedRole"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "elasticloadbalancing.amazonaws.com"
                    ],
                    "variable": "iam:AWSServiceName"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DescribeAccountAttributes",
                  "ec2:DescribeAddresses",
                  "ec2:DescribeAvailabilityZones",
                  "ec2:DescribeCoipPools",
                  "ec2:DescribeInstances",
                  "ec2:DescribeInternetGateways",
                  "ec2:DescribeNetworkInterfaces",
                  "ec2:DescribeSecurityGroups",
                  "ec2:DescribeSubnets",
                  "ec2:DescribeTags",
                  "ec2:DescribeVpcPeeringConnections",
                  "ec2:DescribeVpcs",
                  "ec2:GetCoipPoolUsage",
                  "elasticloadbalancing:DescribeListenerCertificates",
                  "elasticloadbalancing:DescribeListeners",
                  "elasticloadbalancing:DescribeLoadBalancerAttributes",
                  "elasticloadbalancing:DescribeLoadBalancers",
                  "elasticloadbalancing:DescribeRules",
                  "elasticloadbalancing:DescribeSSLPolicies",
                  "elasticloadbalancing:DescribeTags",
                  "elasticloadbalancing:DescribeTargetGroupAttributes",
                  "elasticloadbalancing:DescribeTargetGroups",
                  "elasticloadbalancing:DescribeTargetHealth"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "acm:DescribeCertificate",
                  "acm:ListCertificates",
                  "cognito-idp:DescribeUserPoolClient",
                  "iam:GetServerCertificate",
                  "iam:ListServerCertificates",
                  "shield:CreateProtection",
                  "shield:DeleteProtection",
                  "shield:DescribeProtection",
                  "shield:GetSubscriptionState",
                  "waf-regional:AssociateWebACL",
                  "waf-regional:DisassociateWebACL",
                  "waf-regional:GetWebACL",
                  "waf-regional:GetWebACLForResource",
                  "wafv2:AssociateWebACL",
                  "wafv2:DisassociateWebACL",
                  "wafv2:GetWebACL",
                  "wafv2:GetWebACLForResource"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:CreateSecurityGroup",
                  "ec2:RevokeSecurityGroupIngress"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "CreateSecurityGroup"
                    ],
                    "variable": "ec2:CreateAction"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:security-group/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateTags",
                  "ec2:DeleteTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "Null",
                    "values": [
                      "true"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:security-group/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:DeleteSecurityGroup",
                  "ec2:RevokeSecurityGroupIngress"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:CreateLoadBalancer",
                  "elasticloadbalancing:CreateTargetGroup"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:CreateListener",
                  "elasticloadbalancing:CreateRule",
                  "elasticloadbalancing:DeleteListener",
                  "elasticloadbalancing:DeleteRule"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags",
                  "elasticloadbalancing:RemoveTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "Null",
                    "values": [
                      "true"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                  "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags",
                  "elasticloadbalancing:RemoveTags"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*",
                  "arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*",
                  "arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*",
                  "arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:DeleteLoadBalancer",
                  "elasticloadbalancing:DeleteTargetGroup",
                  "elasticloadbalancing:ModifyLoadBalancerAttributes",
                  "elasticloadbalancing:ModifyTargetGroup",
                  "elasticloadbalancing:ModifyTargetGroupAttributes",
                  "elasticloadbalancing:SetIpAddressType",
                  "elasticloadbalancing:SetSecurityGroups",
                  "elasticloadbalancing:SetSubnets"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "CreateTargetGroup",
                      "CreateLoadBalancer"
                    ],
                    "variable": "elasticloadbalancing:CreateAction"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                  "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:DeregisterTargets",
                  "elasticloadbalancing:RegisterTargets"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddListenerCertificates",
                  "elasticloadbalancing:ModifyListener",
                  "elasticloadbalancing:ModifyRule",
                  "elasticloadbalancing:RemoveListenerCertificates",
                  "elasticloadbalancing:SetWebAcl"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_add_ons.module.load_balancer_controller_irsa_role",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "240741107",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::998516096174:oidc-provider/oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989:aud\": \"sts.amazonaws.com\",\n          \"oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989:sub\": \"system:serviceaccount:kube-system:aws-load-balancer-controller\"\n        }\n      }\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "sts.amazonaws.com"
                    ],
                    "variable": "oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989:aud"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:kube-system:aws-load-balancer-controller"
                    ],
                    "variable": "oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::998516096174:oidc-provider/oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_add_ons.module.load_balancer_controller_irsa_role",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_add_ons.module.load_balancer_controller_irsa_role",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "Asia Pacific (Mumbai)",
            "endpoint": "ec2.ap-south-1.amazonaws.com",
            "id": "ap-south-1",
            "name": "ap-south-1"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_add_ons.module.load_balancer_controller_irsa_role",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "load_balancer_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::998516096174:policy/AmazonEKS_AWS_Load_Balancer_Controller-20230712112404564800000001",
            "description": "Provides permissions for AWS Load Balancer Controller addon",
            "id": "arn:aws:iam::998516096174:policy/AmazonEKS_AWS_Load_Balancer_Controller-20230712112404564800000001",
            "name": "AmazonEKS_AWS_Load_Balancer_Controller-20230712112404564800000001",
            "name_prefix": "AmazonEKS_AWS_Load_Balancer_Controller-",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":\"iam:CreateServiceLinkedRole\",\"Condition\":{\"StringEquals\":{\"iam:AWSServiceName\":\"elasticloadbalancing.amazonaws.com\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:DescribeTargetHealth\",\"elasticloadbalancing:DescribeTargetGroups\",\"elasticloadbalancing:DescribeTargetGroupAttributes\",\"elasticloadbalancing:DescribeTags\",\"elasticloadbalancing:DescribeSSLPolicies\",\"elasticloadbalancing:DescribeRules\",\"elasticloadbalancing:DescribeLoadBalancers\",\"elasticloadbalancing:DescribeLoadBalancerAttributes\",\"elasticloadbalancing:DescribeListeners\",\"elasticloadbalancing:DescribeListenerCertificates\",\"ec2:GetCoipPoolUsage\",\"ec2:DescribeVpcs\",\"ec2:DescribeVpcPeeringConnections\",\"ec2:DescribeTags\",\"ec2:DescribeSubnets\",\"ec2:DescribeSecurityGroups\",\"ec2:DescribeNetworkInterfaces\",\"ec2:DescribeInternetGateways\",\"ec2:DescribeInstances\",\"ec2:DescribeCoipPools\",\"ec2:DescribeAvailabilityZones\",\"ec2:DescribeAddresses\",\"ec2:DescribeAccountAttributes\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"wafv2:GetWebACLForResource\",\"wafv2:GetWebACL\",\"wafv2:DisassociateWebACL\",\"wafv2:AssociateWebACL\",\"waf-regional:GetWebACLForResource\",\"waf-regional:GetWebACL\",\"waf-regional:DisassociateWebACL\",\"waf-regional:AssociateWebACL\",\"shield:GetSubscriptionState\",\"shield:DescribeProtection\",\"shield:DeleteProtection\",\"shield:CreateProtection\",\"iam:ListServerCertificates\",\"iam:GetServerCertificate\",\"cognito-idp:DescribeUserPoolClient\",\"acm:ListCertificates\",\"acm:DescribeCertificate\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:RevokeSecurityGroupIngress\",\"ec2:CreateSecurityGroup\",\"ec2:AuthorizeSecurityGroupIngress\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:CreateTags\",\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"ec2:CreateAction\":\"CreateSecurityGroup\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:DeleteTags\",\"ec2:CreateTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:RevokeSecurityGroupIngress\",\"ec2:DeleteSecurityGroup\",\"ec2:AuthorizeSecurityGroupIngress\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:CreateTargetGroup\",\"elasticloadbalancing:CreateLoadBalancer\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:DeleteRule\",\"elasticloadbalancing:DeleteListener\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:CreateListener\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:RemoveTags\",\"elasticloadbalancing:AddTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"]},{\"Action\":[\"elasticloadbalancing:RemoveTags\",\"elasticloadbalancing:AddTags\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"]},{\"Action\":[\"elasticloadbalancing:SetSubnets\",\"elasticloadbalancing:SetSecurityGroups\",\"elasticloadbalancing:SetIpAddressType\",\"elasticloadbalancing:ModifyTargetGroupAttributes\",\"elasticloadbalancing:ModifyTargetGroup\",\"elasticloadbalancing:ModifyLoadBalancerAttributes\",\"elasticloadbalancing:DeleteTargetGroup\",\"elasticloadbalancing:DeleteLoadBalancer\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"elasticloadbalancing:AddTags\",\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"elasticloadbalancing:CreateAction\":[\"CreateTargetGroup\",\"CreateLoadBalancer\"]}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"]},{\"Action\":[\"elasticloadbalancing:RegisterTargets\",\"elasticloadbalancing:DeregisterTargets\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"},{\"Action\":[\"elasticloadbalancing:SetWebAcl\",\"elasticloadbalancing:RemoveListenerCertificates\",\"elasticloadbalancing:ModifyRule\",\"elasticloadbalancing:ModifyListener\",\"elasticloadbalancing:AddListenerCertificates\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA6Q7BSPSXAM5FTCS4Z",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_add_ons.module.load_balancer_controller_irsa_role.data.aws_iam_policy_document.load_balancer_controller",
            "module.eks_add_ons.module.load_balancer_controller_irsa_role.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks_add_ons.module.load_balancer_controller_irsa_role",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::998516096174:role/load-balancer-controller-atlassian-cluster-1-role",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989:aud\":\"sts.amazonaws.com\",\"oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989:sub\":\"system:serviceaccount:kube-system:aws-load-balancer-controller\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::998516096174:oidc-provider/oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2023-07-12T11:24:06Z",
            "description": "",
            "force_detach_policies": true,
            "id": "load-balancer-controller-atlassian-cluster-1-role",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::998516096174:policy/AmazonEKS_AWS_Load_Balancer_Controller-20230712112404564800000001"
            ],
            "max_session_duration": 3600,
            "name": "load-balancer-controller-atlassian-cluster-1-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "tags_all": {},
            "unique_id": "AROA6Q7BSPSXPTNHFYPCU"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_add_ons.module.load_balancer_controller_irsa_role.data.aws_caller_identity.current",
            "module.eks_add_ons.module.load_balancer_controller_irsa_role.data.aws_iam_policy_document.this",
            "module.eks_add_ons.module.load_balancer_controller_irsa_role.data.aws_partition.current",
            "module.eks_cluster.data.aws_subnets.private_subnets",
            "module.eks_cluster.module.eks.aws_cloudwatch_log_group.this",
            "module.eks_cluster.module.eks.aws_eks_cluster.this",
            "module.eks_cluster.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks_cluster.module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node",
            "module.eks_cluster.module.eks.aws_security_group_rule.cluster",
            "module.eks_cluster.module.eks.aws_security_group_rule.node",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.data.tls_certificate.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks_add_ons.module.load_balancer_controller_irsa_role",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "load_balancer_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "load-balancer-controller-atlassian-cluster-1-role-20230712112407600400000004",
            "policy_arn": "arn:aws:iam::998516096174:policy/AmazonEKS_AWS_Load_Balancer_Controller-20230712112404564800000001",
            "role": "load-balancer-controller-atlassian-cluster-1-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_add_ons.module.load_balancer_controller_irsa_role.aws_iam_policy.load_balancer_controller",
            "module.eks_add_ons.module.load_balancer_controller_irsa_role.aws_iam_role.this",
            "module.eks_add_ons.module.load_balancer_controller_irsa_role.data.aws_caller_identity.current",
            "module.eks_add_ons.module.load_balancer_controller_irsa_role.data.aws_iam_policy_document.load_balancer_controller",
            "module.eks_add_ons.module.load_balancer_controller_irsa_role.data.aws_iam_policy_document.this",
            "module.eks_add_ons.module.load_balancer_controller_irsa_role.data.aws_partition.current",
            "module.eks_cluster.data.aws_subnets.private_subnets",
            "module.eks_cluster.module.eks.aws_cloudwatch_log_group.this",
            "module.eks_cluster.module.eks.aws_eks_cluster.this",
            "module.eks_cluster.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks_cluster.module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node",
            "module.eks_cluster.module.eks.aws_security_group_rule.cluster",
            "module.eks_cluster.module.eks.aws_security_group_rule.node",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.data.tls_certificate.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks_add_ons.module.secrets_manager_role",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "998516096174",
            "arn": "arn:aws:iam::998516096174:user/svc-terraform",
            "id": "998516096174",
            "user_id": "AIDA6Q7BSPSXNVRO46LMO"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_add_ons.module.secrets_manager_role",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "external_secrets",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3411565287",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ssm:DescribeParameters\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ssm:GetParameters\",\n        \"ssm:GetParameter\"\n      ],\n      \"Resource\": \"arn:aws:ssm:*:*:parameter/*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"secretsmanager:ListSecrets\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"secretsmanager:ListSecretVersionIds\",\n        \"secretsmanager:GetSecretValue\",\n        \"secretsmanager:GetResourcePolicy\",\n        \"secretsmanager:DescribeSecret\"\n      ],\n      \"Resource\": \"arn:aws:secretsmanager:ap-south-1:998516096174:secret:SecretStore-atlassian-cluster-1-3yamXJ\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"kms:Decrypt\",\n      \"Resource\": \"arn:aws:kms:*:*:key/*\"\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "ssm:DescribeParameters"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ssm:GetParameter",
                  "ssm:GetParameters"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ssm:*:*:parameter/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "secretsmanager:ListSecrets"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "secretsmanager:DescribeSecret",
                  "secretsmanager:GetResourcePolicy",
                  "secretsmanager:GetSecretValue",
                  "secretsmanager:ListSecretVersionIds"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:secretsmanager:ap-south-1:998516096174:secret:SecretStore-atlassian-cluster-1-3yamXJ"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "kms:Decrypt"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:kms:*:*:key/*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_add_ons.module.secrets_manager_role",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "4210622267",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::998516096174:oidc-provider/oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989:aud\": \"sts.amazonaws.com\",\n          \"oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989:sub\": \"system:serviceaccount:external-secrets:external-secrets\"\n        }\n      }\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "sts.amazonaws.com"
                    ],
                    "variable": "oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989:aud"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:external-secrets:external-secrets"
                    ],
                    "variable": "oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::998516096174:oidc-provider/oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_add_ons.module.secrets_manager_role",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_add_ons.module.secrets_manager_role",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "Asia Pacific (Mumbai)",
            "endpoint": "ec2.ap-south-1.amazonaws.com",
            "id": "ap-south-1",
            "name": "ap-south-1"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_add_ons.module.secrets_manager_role",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "external_secrets",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::998516096174:policy/AmazonEKS_External_Secrets_Policy-20230712112404564800000002",
            "description": "Provides permissions to for External Secrets to retrieve secrets from AWS SSM and AWS Secrets Manager",
            "id": "arn:aws:iam::998516096174:policy/AmazonEKS_External_Secrets_Policy-20230712112404564800000002",
            "name": "AmazonEKS_External_Secrets_Policy-20230712112404564800000002",
            "name_prefix": "AmazonEKS_External_Secrets_Policy-",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":\"ssm:DescribeParameters\",\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ssm:GetParameters\",\"ssm:GetParameter\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ssm:*:*:parameter/*\"},{\"Action\":\"secretsmanager:ListSecrets\",\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"secretsmanager:ListSecretVersionIds\",\"secretsmanager:GetSecretValue\",\"secretsmanager:GetResourcePolicy\",\"secretsmanager:DescribeSecret\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:secretsmanager:ap-south-1:998516096174:secret:SecretStore-atlassian-cluster-1-3yamXJ\"},{\"Action\":\"kms:Decrypt\",\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:*:*:key/*\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA6Q7BSPSXPISFQLEGH",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_secretsmanager_secret.secret_store",
            "module.eks_add_ons.module.secrets_manager_role.data.aws_iam_policy_document.external_secrets"
          ]
        }
      ]
    },
    {
      "module": "module.eks_add_ons.module.secrets_manager_role",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::998516096174:role/secrets-manager-atlassian-cluster-1-role",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989:aud\":\"sts.amazonaws.com\",\"oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989:sub\":\"system:serviceaccount:external-secrets:external-secrets\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::998516096174:oidc-provider/oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2023-07-12T11:24:06Z",
            "description": "",
            "force_detach_policies": true,
            "id": "secrets-manager-atlassian-cluster-1-role",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::998516096174:policy/AmazonEKS_External_Secrets_Policy-20230712112404564800000002"
            ],
            "max_session_duration": 3600,
            "name": "secrets-manager-atlassian-cluster-1-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "tags_all": {},
            "unique_id": "AROA6Q7BSPSXLPDU3MWSR"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_add_ons.module.secrets_manager_role.data.aws_caller_identity.current",
            "module.eks_add_ons.module.secrets_manager_role.data.aws_iam_policy_document.this",
            "module.eks_add_ons.module.secrets_manager_role.data.aws_partition.current",
            "module.eks_cluster.data.aws_subnets.private_subnets",
            "module.eks_cluster.module.eks.aws_cloudwatch_log_group.this",
            "module.eks_cluster.module.eks.aws_eks_cluster.this",
            "module.eks_cluster.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks_cluster.module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node",
            "module.eks_cluster.module.eks.aws_security_group_rule.cluster",
            "module.eks_cluster.module.eks.aws_security_group_rule.node",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.data.tls_certificate.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks_add_ons.module.secrets_manager_role",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "external_secrets",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "secrets-manager-atlassian-cluster-1-role-20230712112407219700000003",
            "policy_arn": "arn:aws:iam::998516096174:policy/AmazonEKS_External_Secrets_Policy-20230712112404564800000002",
            "role": "secrets-manager-atlassian-cluster-1-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_secretsmanager_secret.secret_store",
            "module.eks_add_ons.module.secrets_manager_role.aws_iam_policy.external_secrets",
            "module.eks_add_ons.module.secrets_manager_role.aws_iam_role.this",
            "module.eks_add_ons.module.secrets_manager_role.data.aws_caller_identity.current",
            "module.eks_add_ons.module.secrets_manager_role.data.aws_iam_policy_document.external_secrets",
            "module.eks_add_ons.module.secrets_manager_role.data.aws_iam_policy_document.this",
            "module.eks_add_ons.module.secrets_manager_role.data.aws_partition.current",
            "module.eks_cluster.data.aws_subnets.private_subnets",
            "module.eks_cluster.module.eks.aws_cloudwatch_log_group.this",
            "module.eks_cluster.module.eks.aws_eks_cluster.this",
            "module.eks_cluster.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks_cluster.module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node",
            "module.eks_cluster.module.eks.aws_security_group_rule.cluster",
            "module.eks_cluster.module.eks.aws_security_group_rule.node",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.data.tls_certificate.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks_cluster",
      "mode": "data",
      "type": "aws_availability_zones",
      "name": "available",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "all_availability_zones": null,
            "exclude_names": null,
            "exclude_zone_ids": null,
            "filter": null,
            "group_names": [
              "ap-south-1"
            ],
            "id": "ap-south-1",
            "names": [
              "ap-south-1a",
              "ap-south-1b",
              "ap-south-1c"
            ],
            "state": null,
            "timeouts": null,
            "zone_ids": [
              "aps1-az1",
              "aps1-az3",
              "aps1-az2"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_cluster",
      "mode": "data",
      "type": "aws_instances",
      "name": "my_worker_nodes",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filter": null,
            "id": "ap-south-1",
            "ids": [
              "i-04b45f8e767ad1518",
              "i-0d3272936809f7f1e"
            ],
            "instance_state_names": [
              "running"
            ],
            "instance_tags": {
              "eks:cluster-name": "atlassian-cluster-1"
            },
            "ipv6_addresses": [],
            "private_ips": [
              "10.0.3.34",
              "10.0.2.43"
            ],
            "public_ips": [],
            "timeouts": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_cluster",
      "mode": "data",
      "type": "aws_subnets",
      "name": "private_subnets",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filter": [
              {
                "name": "tag:Name",
                "values": [
                  "*private*"
                ]
              },
              {
                "name": "vpc-id",
                "values": [
                  "vpc-0f851beb2ba287c51"
                ]
              }
            ],
            "id": "ap-south-1",
            "ids": [
              "subnet-073a5d0b35e22e05d",
              "subnet-03ce94c2a2af0a2aa",
              "subnet-072b3186da6c8e27d"
            ],
            "tags": null,
            "timeouts": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.ebs_csi_irsa_role",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "998516096174",
            "arn": "arn:aws:iam::998516096174:user/svc-terraform",
            "id": "998516096174",
            "user_id": "AIDA6Q7BSPSXNVRO46LMO"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.ebs_csi_irsa_role",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "ebs_csi",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "932695789",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:ModifyVolume\",\n        \"ec2:DetachVolume\",\n        \"ec2:DescribeVolumesModifications\",\n        \"ec2:DescribeVolumes\",\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeSnapshots\",\n        \"ec2:DescribeInstances\",\n        \"ec2:DescribeAvailabilityZones\",\n        \"ec2:CreateSnapshot\",\n        \"ec2:AttachVolume\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateTags\",\n      \"Resource\": [\n        \"arn:aws:ec2:*:*:volume/*\",\n        \"arn:aws:ec2:*:*:snapshot/*\"\n      ],\n      \"Condition\": {\n        \"StringEquals\": {\n          \"ec2:CreateAction\": [\n            \"CreateVolume\",\n            \"CreateSnapshot\"\n          ]\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DeleteTags\",\n      \"Resource\": [\n        \"arn:aws:ec2:*:*:volume/*\",\n        \"arn:aws:ec2:*:*:snapshot/*\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateVolume\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"aws:RequestTag/ebs.csi.aws.com/cluster\": \"true\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateVolume\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"aws:RequestTag/CSIVolumeName\": \"*\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateVolume\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"aws:RequestTag/kubernetes.io/cluster/*\": \"owned\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DeleteVolume\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/ebs.csi.aws.com/cluster\": \"true\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DeleteVolume\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/CSIVolumeName\": \"*\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DeleteVolume\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/kubernetes.io/cluster/*\": \"owned\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DeleteVolume\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/kubernetes.io/created-for/pvc/name\": \"*\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DeleteSnapshot\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/CSIVolumeSnapshotName\": \"*\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DeleteSnapshot\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/ebs.csi.aws.com/cluster\": \"true\"\n        }\n      }\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "ec2:AttachVolume",
                  "ec2:CreateSnapshot",
                  "ec2:DescribeAvailabilityZones",
                  "ec2:DescribeInstances",
                  "ec2:DescribeSnapshots",
                  "ec2:DescribeTags",
                  "ec2:DescribeVolumes",
                  "ec2:DescribeVolumesModifications",
                  "ec2:DetachVolume",
                  "ec2:ModifyVolume"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateTags"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "CreateVolume",
                      "CreateSnapshot"
                    ],
                    "variable": "ec2:CreateAction"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:snapshot/*",
                  "arn:aws:ec2:*:*:volume/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DeleteTags"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:snapshot/*",
                  "arn:aws:ec2:*:*:volume/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateVolume"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "true"
                    ],
                    "variable": "aws:RequestTag/ebs.csi.aws.com/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateVolume"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "*"
                    ],
                    "variable": "aws:RequestTag/CSIVolumeName"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateVolume"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "owned"
                    ],
                    "variable": "aws:RequestTag/kubernetes.io/cluster/*"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DeleteVolume"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "true"
                    ],
                    "variable": "ec2:ResourceTag/ebs.csi.aws.com/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DeleteVolume"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "*"
                    ],
                    "variable": "ec2:ResourceTag/CSIVolumeName"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DeleteVolume"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "owned"
                    ],
                    "variable": "ec2:ResourceTag/kubernetes.io/cluster/*"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DeleteVolume"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "*"
                    ],
                    "variable": "ec2:ResourceTag/kubernetes.io/created-for/pvc/name"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DeleteSnapshot"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "*"
                    ],
                    "variable": "ec2:ResourceTag/CSIVolumeSnapshotName"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DeleteSnapshot"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "true"
                    ],
                    "variable": "ec2:ResourceTag/ebs.csi.aws.com/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.ebs_csi_irsa_role",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2952808755",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::998516096174:oidc-provider/oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989:aud\": \"sts.amazonaws.com\",\n          \"oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989:sub\": \"system:serviceaccount:kube-system:ebs-csi-controller-sa\"\n        }\n      }\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "sts.amazonaws.com"
                    ],
                    "variable": "oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989:aud"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:kube-system:ebs-csi-controller-sa"
                    ],
                    "variable": "oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::998516096174:oidc-provider/oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.ebs_csi_irsa_role",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.ebs_csi_irsa_role",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "Asia Pacific (Mumbai)",
            "endpoint": "ec2.ap-south-1.amazonaws.com",
            "id": "ap-south-1",
            "name": "ap-south-1"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.ebs_csi_irsa_role",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "ebs_csi",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::998516096174:policy/AmazonEKS_EBS_CSI_Policy-20230712103521020400000006",
            "description": "Provides permissions to manage EBS volumes via the container storage interface driver",
            "id": "arn:aws:iam::998516096174:policy/AmazonEKS_EBS_CSI_Policy-20230712103521020400000006",
            "name": "AmazonEKS_EBS_CSI_Policy-20230712103521020400000006",
            "name_prefix": "AmazonEKS_EBS_CSI_Policy-",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"ec2:ModifyVolume\",\"ec2:DetachVolume\",\"ec2:DescribeVolumesModifications\",\"ec2:DescribeVolumes\",\"ec2:DescribeTags\",\"ec2:DescribeSnapshots\",\"ec2:DescribeInstances\",\"ec2:DescribeAvailabilityZones\",\"ec2:CreateSnapshot\",\"ec2:AttachVolume\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:CreateTags\",\"Condition\":{\"StringEquals\":{\"ec2:CreateAction\":[\"CreateVolume\",\"CreateSnapshot\"]}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:ec2:*:*:volume/*\",\"arn:aws:ec2:*:*:snapshot/*\"]},{\"Action\":\"ec2:DeleteTags\",\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:ec2:*:*:volume/*\",\"arn:aws:ec2:*:*:snapshot/*\"]},{\"Action\":\"ec2:CreateVolume\",\"Condition\":{\"StringLike\":{\"aws:RequestTag/ebs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:CreateVolume\",\"Condition\":{\"StringLike\":{\"aws:RequestTag/CSIVolumeName\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:CreateVolume\",\"Condition\":{\"StringLike\":{\"aws:RequestTag/kubernetes.io/cluster/*\":\"owned\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:DeleteVolume\",\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/ebs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:DeleteVolume\",\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/CSIVolumeName\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:DeleteVolume\",\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/kubernetes.io/cluster/*\":\"owned\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:DeleteVolume\",\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/kubernetes.io/created-for/pvc/name\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:DeleteSnapshot\",\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/CSIVolumeSnapshotName\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:DeleteSnapshot\",\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/ebs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA6Q7BSPSXILDNSIKHC",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.ebs_csi_irsa_role",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::998516096174:role/ebs-csi-atlassian-cluster-1-role",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989:aud\":\"sts.amazonaws.com\",\"oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989:sub\":\"system:serviceaccount:kube-system:ebs-csi-controller-sa\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::998516096174:oidc-provider/oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2023-07-12T10:44:17Z",
            "description": "",
            "force_detach_policies": true,
            "id": "ebs-csi-atlassian-cluster-1-role",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::998516096174:policy/AmazonEKS_EBS_CSI_Policy-20230712103521020400000006"
            ],
            "max_session_duration": 3600,
            "name": "ebs-csi-atlassian-cluster-1-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "tags_all": {},
            "unique_id": "AROA6Q7BSPSXED3VUBAE3"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_cluster.data.aws_subnets.private_subnets",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_caller_identity.current",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_partition.current",
            "module.eks_cluster.module.eks.aws_cloudwatch_log_group.this",
            "module.eks_cluster.module.eks.aws_eks_cluster.this",
            "module.eks_cluster.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks_cluster.module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node",
            "module.eks_cluster.module.eks.aws_security_group_rule.cluster",
            "module.eks_cluster.module.eks.aws_security_group_rule.node",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.data.tls_certificate.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.ebs_csi_irsa_role",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "ebs_csi",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "ebs-csi-atlassian-cluster-1-role-20230712104418334500000012",
            "policy_arn": "arn:aws:iam::998516096174:policy/AmazonEKS_EBS_CSI_Policy-20230712103521020400000006",
            "role": "ebs-csi-atlassian-cluster-1-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_cluster.data.aws_subnets.private_subnets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_policy.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_caller_identity.current",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.ebs_csi",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_partition.current",
            "module.eks_cluster.module.eks.aws_cloudwatch_log_group.this",
            "module.eks_cluster.module.eks.aws_eks_cluster.this",
            "module.eks_cluster.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks_cluster.module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node",
            "module.eks_cluster.module.eks.aws_security_group_rule.cluster",
            "module.eks_cluster.module.eks.aws_security_group_rule.node",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.data.tls_certificate.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "998516096174",
            "arn": "arn:aws:iam::998516096174:user/svc-terraform",
            "id": "998516096174",
            "user_id": "AIDA6Q7BSPSXNVRO46LMO"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks",
      "mode": "data",
      "type": "aws_eks_addon_version",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "aws-ebs-csi-driver",
          "schema_version": 0,
          "attributes": {
            "addon_name": "aws-ebs-csi-driver",
            "id": "aws-ebs-csi-driver",
            "kubernetes_version": "1.27",
            "most_recent": false,
            "version": "v1.20.0-eksbuild.1"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2764486067",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "eks.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSClusterAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks",
      "mode": "data",
      "type": "aws_iam_session_context",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::998516096174:user/svc-terraform",
            "id": "arn:aws:iam::998516096174:user/svc-terraform",
            "issuer_arn": "arn:aws:iam::998516096174:user/svc-terraform",
            "issuer_id": "",
            "issuer_name": "",
            "session_name": ""
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks",
      "mode": "data",
      "type": "tls_certificate",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "certificates": [
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEdTCCA12gAwIBAgIJAKcOSkw0grd/MA0GCSqGSIb3DQEBCwUAMGgxCzAJBgNV\nBAYTAlVTMSUwIwYDVQQKExxTdGFyZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTIw\nMAYDVQQLEylTdGFyZmllbGQgQ2xhc3MgMiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0\neTAeFw0wOTA5MDIwMDAwMDBaFw0zNDA2MjgxNzM5MTZaMIGYMQswCQYDVQQGEwJV\nUzEQMA4GA1UECBMHQXJpem9uYTETMBEGA1UEBxMKU2NvdHRzZGFsZTElMCMGA1UE\nChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjE7MDkGA1UEAxMyU3RhcmZp\nZWxkIFNlcnZpY2VzIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IC0gRzIwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDVDDrEKvlO4vW+GZdfjohTsR8/\ny8+fIBNtKTrID30892t2OGPZNmCom15cAICyL1l/9of5JUOG52kbUpqQ4XHj2C0N\nTm/2yEnZtvMaVq4rtnQU68/7JuMauh2WLmo7WJSJR1b/JaCTcFOD2oR0FMNnngRo\nOt+OQFodSk7PQ5E751bWAHDLUu57fa4657wx+UX2wmDPE1kCK4DMNEffud6QZW0C\nzyyRpqbn3oUYSXxmTqM6bam17jQuug0DuDPfR+uxa40l2ZvOgdFFRjKWcIfeAg5J\nQ4W2bHO7ZOphQazJ1FTfhy/HIrImzJ9ZVGif/L4qL8RVHHVAYBeFAlU5i38FAgMB\nAAGjgfAwge0wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0O\nBBYEFJxfAN+qAdcwKziIorhtSpzyEZGDMB8GA1UdIwQYMBaAFL9ft9HO3R+G9FtV\nrNzXEMIOqYjnME8GCCsGAQUFBwEBBEMwQTAcBggrBgEFBQcwAYYQaHR0cDovL28u\nc3MyLnVzLzAhBggrBgEFBQcwAoYVaHR0cDovL3guc3MyLnVzL3guY2VyMCYGA1Ud\nHwQfMB0wG6AZoBeGFWh0dHA6Ly9zLnNzMi51cy9yLmNybDARBgNVHSAECjAIMAYG\nBFUdIAAwDQYJKoZIhvcNAQELBQADggEBACMd44pXyn3pF3lM8R5V/cxTbj5HD9/G\nVfKyBDbtgB9TxF00KGu+x1X8Z+rLP3+QsjPNG1gQggL4+C/1E2DUBc7xgQjB3ad1\nl08YuW3e95ORCLp+QCztweq7dp4zBncdDQh/U90bZKuCJ/Fp1U1ervShw3WnWEQt\n8jxwmKy6abaVd38PMV4s/KCHOkdp8Hlf9BRUpJVeEXgSYCfOn8J3/yNTd126/+pZ\n59vPr5KW7ySaNRB6nJHGDn2Z9j8Z3/VyVOEVqQdZe4O/Ui5GjLIAZHYcSNPYeehu\nVsyuLAOQ1xk4meTKCRlb/weWsKh/NEnfVqn3sF/tM+2MR7cwA130A4w=\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "not_after": "2034-06-28T17:39:16Z",
                "not_before": "2009-09-02T00:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "12037640545166866303",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgITBn+USionzfP6wq4rAfkI7rnExjANBgkqhkiG9w0BAQsF\nADCBmDELMAkGA1UEBhMCVVMxEDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNj\nb3R0c2RhbGUxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4x\nOzA5BgNVBAMTMlN0YXJmaWVsZCBTZXJ2aWNlcyBSb290IENlcnRpZmljYXRlIEF1\ndGhvcml0eSAtIEcyMB4XDTE1MDUyNTEyMDAwMFoXDTM3MTIzMTAxMDAwMFowOTEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\nb3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj\nca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM\n9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw\nIFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6\nVOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L\n93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm\njgSubJrIqg0CAwEAAaOCATEwggEtMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/\nBAQDAgGGMB0GA1UdDgQWBBSEGMyFNOy8DJSULghZnMeyEE4KCDAfBgNVHSMEGDAW\ngBScXwDfqgHXMCs4iKK4bUqc8hGRgzB4BggrBgEFBQcBAQRsMGowLgYIKwYBBQUH\nMAGGImh0dHA6Ly9vY3NwLnJvb3RnMi5hbWF6b250cnVzdC5jb20wOAYIKwYBBQUH\nMAKGLGh0dHA6Ly9jcnQucm9vdGcyLmFtYXpvbnRydXN0LmNvbS9yb290ZzIuY2Vy\nMD0GA1UdHwQ2MDQwMqAwoC6GLGh0dHA6Ly9jcmwucm9vdGcyLmFtYXpvbnRydXN0\nLmNvbS9yb290ZzIuY3JsMBEGA1UdIAQKMAgwBgYEVR0gADANBgkqhkiG9w0BAQsF\nAAOCAQEAYjdCXLwQtT6LLOkMm2xF4gcAevnFWAu5CIw+7bMlPLVvUOTNNWqnkzSW\nMiGpSESrnO09tKpzbeR/FoCJbM8oAxiDR3mjEH4wW6w7sGDgd9QIpuEdfF7Au/ma\neyKdpwAJfqxGF4PcnCZXmTA5YpaP7dreqsXMGz7KQ2hsVxa81Q4gLv7/wmpdLqBK\nbRRYh5TmOTFffHPLkIhqhBGWJ6bt2YFGpn6jcgAKUj6DiAdjd4lpFw85hdKrCEVN\n0FE6/V1dN2RMfjCyVSRCnTawXZwXgWHxyvkQAiSr6w10kY17RSlQOYiypok1JR4U\nakcjMS9cmvqtmg5iUaQqqcT5NJ0hGA==\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "not_after": "2037-12-31T01:00:00Z",
                "not_before": "2015-05-25T12:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "144918191876577076464031512351042010504348870",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEXjCCA0agAwIBAgITB3MSOAudZoijOx7Zv5zNpo4ODzANBgkqhkiG9w0BAQsF\nADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\nb24gUm9vdCBDQSAxMB4XDTIyMDgyMzIyMjEyOFoXDTMwMDgyMzIyMjEyOFowPDEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEcMBoGA1UEAxMTQW1hem9uIFJT\nQSAyMDQ4IE0wMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOtxLKnL\nH4gokjIwr4pXD3i3NyWVVYesZ1yX0yLI2qIUZ2t88Gfa4gMqs1YSXca1R/lnCKeT\nepWSGA+0+fkQNpp/L4C2T7oTTsddUx7g3ZYzByDTlrwS5HRQQqEFE3O1T5tEJP4t\nf+28IoXsNiEzl3UGzicYgtzj2cWCB41eJgEmJmcf2T8TzzK6a614ZPyq/w4CPAff\nnAV4coz96nW3AyiE2uhuB4zQUIXvgVSycW7sbWLvj5TDXunEpNCRwC4kkZjK7rol\njtT2cbb7W2s4Bkg3R42G3PLqBvt2N32e/0JOTViCk8/iccJ4sXqrS1uUN4iB5Nmv\nJK74csVl+0u0UecCAwEAAaOCAVowggFWMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYD\nVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNV\nHQ4EFgQUgbgOY4qJEhjl+js7UJWf5uWQE4UwHwYDVR0jBBgwFoAUhBjMhTTsvAyU\nlC4IWZzHshBOCggwewYIKwYBBQUHAQEEbzBtMC8GCCsGAQUFBzABhiNodHRwOi8v\nb2NzcC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbTA6BggrBgEFBQcwAoYuaHR0cDov\nL2NydC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbS9yb290Y2ExLmNlcjA/BgNVHR8E\nODA2MDSgMqAwhi5odHRwOi8vY3JsLnJvb3RjYTEuYW1hem9udHJ1c3QuY29tL3Jv\nb3RjYTEuY3JsMBMGA1UdIAQMMAowCAYGZ4EMAQIBMA0GCSqGSIb3DQEBCwUAA4IB\nAQCtAN4CBSMuBjJitGuxlBbkEUDeK/pZwTXv4KqPK0G50fOHOQAd8j21p0cMBgbG\nkfMHVwLU7b0XwZCav0h1ogdPMN1KakK1DT0VwA/+hFvGPJnMV1Kx2G4S1ZaSk0uU\n5QfoiYIIano01J5k4T2HapKQmmOhS/iPtuo00wW+IMLeBuKMn3OLn005hcrOGTad\nhcmeyfhQP7Z+iKHvyoQGi1C0ClymHETx/chhQGDyYSWqB/THwnN15AwLQo0E5V9E\nSJlbe4mBlqeInUsNYugExNf+tOiybcrswBy8OFsd34XOW3rjSUtsuafd9AWySa3h\nxRRrwszrzX/WWGm6wyB+f7C4\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "not_after": "2030-08-23T22:21:28Z",
                "not_before": "2022-08-23T22:21:28Z",
                "public_key_algorithm": "RSA",
                "serial_number": "166129328851546858514271303855646110030630415",
                "sha1_fingerprint": "2ad974a775f73cbdbbd8f5ac3a49255fa8fb1f8c",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Amazon RSA 2048 M01,O=Amazon,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIF7TCCBNWgAwIBAgIQA5HmLsxqQDg3E9F+6IwH3DANBgkqhkiG9w0BAQsFADA8\nMQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRwwGgYDVQQDExNBbWF6b24g\nUlNBIDIwNDggTTAxMB4XDTIzMDQxNTAwMDAwMFoXDTI0MDUxMzIzNTk1OVowLDEq\nMCgGA1UEAxMhb2lkYy5la3MuYXAtc291dGgtMS5hbWF6b25hd3MuY29tMIIBIjAN\nBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1anOiYyP3EWnzSy6iCUiFYlqyX2J\nd3bkOMHJAPRRHAMDJX29ZNRLzkmk1dqYMGGRx/y0Hl04AeRqEZbZO/vJKTRz/3NI\n/E6tIAMwAFsNYDrEKKqD2jIWVeYYaMnMTow9ShIBIUW3Yg7kOCl0rRVn0Z6k7JtO\npl9ykVjgmoh8JrFI6xNtWU3KplNyYiP95HYYR50+/dmXSlBdD35D9thWp3t+ZaBV\nCoSDWRmte0K21obpzQLn9pH4UaUhk+GGMQUXDOSWLUyXs8tH/lp/0Tj1zFiFs862\neDli1cG5dn+hmfhfrYqHSVdoFYGeXAJv83sRgQDfYsfirbpahNVIUXnR6QIDAQAB\no4IC+TCCAvUwHwYDVR0jBBgwFoAUgbgOY4qJEhjl+js7UJWf5uWQE4UwHQYDVR0O\nBBYEFK/GH4wzjXvYncHYC++XyrF6Q3TPMCwGA1UdEQQlMCOCIW9pZGMuZWtzLmFw\nLXNvdXRoLTEuYW1hem9uYXdzLmNvbTAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYw\nFAYIKwYBBQUHAwEGCCsGAQUFBwMCMDsGA1UdHwQ0MDIwMKAuoCyGKmh0dHA6Ly9j\ncmwucjJtMDEuYW1hem9udHJ1c3QuY29tL3IybTAxLmNybDATBgNVHSAEDDAKMAgG\nBmeBDAECATB1BggrBgEFBQcBAQRpMGcwLQYIKwYBBQUHMAGGIWh0dHA6Ly9vY3Nw\nLnIybTAxLmFtYXpvbnRydXN0LmNvbTA2BggrBgEFBQcwAoYqaHR0cDovL2NydC5y\nMm0wMS5hbWF6b250cnVzdC5jb20vcjJtMDEuY2VyMAwGA1UdEwEB/wQCMAAwggF9\nBgorBgEEAdZ5AgQCBIIBbQSCAWkBZwB2AHb/iD8KtvuVUcJhzPWHujS0pM27Kdxo\nQgqf5mdMWjp0AAABh4JC93IAAAQDAEcwRQIgSGN5cVYt0NaSiQdQL3/2Y8FzFPKv\nfb4B/lxt558ax/gCIQDcyDNJDOQLykt6OYvfUFbPT2au+Sx8jwW9O0M8uKnLgwB2\nAHPZnokbTJZ4oCB9R53mssYc0FFecRkqjGuAEHrBd3K1AAABh4JC95UAAAQDAEcw\nRQIhAPyDaevv07moby742IE/pEcIvayHaPweIpIaBtn2151yAiAZWvB6YwFW7yzr\nL4sP56WkScvnAjpn8tUMUvE1YkZ8uwB1AEiw42vapkc0D+VqAvqdMOscUgHLVt0s\ngdm7v6s52IRzAAABh4JC92MAAAQDAEYwRAIgG4EVA1zmifPvD50Y5vrpRgUoieR2\nTTvSuob62xu0iVsCIHUUdI+wpcOMIxGRsEEcPRdvTdxngSBGlNuHiM8chkNsMA0G\nCSqGSIb3DQEBCwUAA4IBAQCXSU3/S67WVLb5MUU3bhb4Uj3r/z1iH8mcuOPpHSFV\n2mC/nuSEb+dQ/Yvlj27k1Oiim45NsDSxglIo5a+aI1YLd1vZDykQXU/K3c7jYkX6\nJYgGBhDmxq6shmLCqc3zUY8NjfirJN7dKgFpBF9T2YOMRmGPMTfaTMfYbQvAhQ0A\nfdIQVV+tVluMevpYIthm52vDSBdXCwzDDGdAAgqHfuLuKgWupX9Vn6I7tbWeOYMN\nzgtsRdsyu4r1NvXRL1IANNkuFUHOH1yfiatMnNfR27vgWpmqvbdTQTrkxPfgxDF4\nCEMM+JOHHBcH88bd2RtCEgwSu2F2rZQRrKsV4ye5lrOM\n-----END CERTIFICATE-----\n",
                "is_ca": false,
                "issuer": "CN=Amazon RSA 2048 M01,O=Amazon,C=US",
                "not_after": "2024-05-13T23:59:59Z",
                "not_before": "2023-04-15T00:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "4745235693810004574080242856439318492",
                "sha1_fingerprint": "b7e3017b01708fa231aa0dbd1b7ec441e2646149",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=oidc.eks.ap-south-1.amazonaws.com",
                "version": 3
              }
            ],
            "content": null,
            "id": "19f1975010c6112f8493618c27b546ca956a4667",
            "url": "https://oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989",
            "verify_chain": true
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:ap-south-1:998516096174:log-group:/aws/eks/atlassian-cluster-1/cluster",
            "id": "/aws/eks/atlassian-cluster-1/cluster",
            "kms_key_id": "",
            "name": "/aws/eks/atlassian-cluster-1/cluster",
            "name_prefix": "",
            "retention_in_days": 90,
            "skip_destroy": false,
            "tags": {
              "Name": "/aws/eks/atlassian-cluster-1/cluster"
            },
            "tags_all": {
              "Name": "/aws/eks/atlassian-cluster-1/cluster"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks",
      "mode": "managed",
      "type": "aws_eks_addon",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "aws-ebs-csi-driver",
          "schema_version": 0,
          "attributes": {
            "addon_name": "aws-ebs-csi-driver",
            "addon_version": "v1.20.0-eksbuild.1",
            "arn": "arn:aws:eks:ap-south-1:998516096174:addon/atlassian-cluster-1/aws-ebs-csi-driver/bec4a4db-19c2-0b48-fc1a-485de91ddcf5",
            "cluster_name": "atlassian-cluster-1",
            "configuration_values": "",
            "created_at": "2023-07-12T10:47:04Z",
            "id": "atlassian-cluster-1:aws-ebs-csi-driver",
            "modified_at": "2023-07-12T10:48:23Z",
            "preserve": null,
            "resolve_conflicts": "OVERWRITE",
            "resolve_conflicts_on_create": null,
            "resolve_conflicts_on_update": null,
            "service_account_role_arn": "arn:aws:iam::998516096174:role/ebs-csi-atlassian-cluster-1-role",
            "tags": {},
            "tags_all": {},
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            }
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjI0MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.eks_cluster.data.aws_subnets.private_subnets",
            "module.eks_cluster.module.ebs_csi_irsa_role.aws_iam_role.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_caller_identity.current",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.ebs_csi_irsa_role.data.aws_partition.current",
            "module.eks_cluster.module.eks.aws_cloudwatch_log_group.this",
            "module.eks_cluster.module.eks.aws_eks_cluster.this",
            "module.eks_cluster.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks_cluster.module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node",
            "module.eks_cluster.module.eks.aws_security_group_rule.cluster",
            "module.eks_cluster.module.eks.aws_security_group_rule.node",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_eks_addon_version.this",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.data.tls_certificate.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_ami.eks_default",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.time_sleep.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:ap-south-1:998516096174:cluster/atlassian-cluster-1",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1EY3hNakV3TkRBeU9Wb1hEVE16TURjd09URXdOREF5T1Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmhTCkZ2WnhMRU9zckgrU2czN0F5d0V5WlFVTURJOUg0UHBZNUhkRG4xMXh4MmFlVlZ4aXNCWVZ5aXNHUzZVY3ljbWsKMU9aUEczblhoMlBORUNweHo4VDVkdlJRVVdBWDZLYUpPT1RZYzRsb1o5VEZMWjZPTWQ1NzFUalZRZExCdDdhVgpXbHg5a1F4a3JWQnd6RXdmU3BkQ0I1Zm9GR0FsU1FsTVlBaFlDWlBta3h0RFRiVDRZbUFwUmdMUFRTZjhhd29uCldveElGRERMWElOTUYxTC9uSlV6QkhETlljdWZoa2xYUDZvQkRlWHdTbFNZeXdnWnU3cTBVT0JzUFBxT3ZRSnEKS0d2Rzc4MUF3MVo1dGxVd0lNcGxrMzhZUHJncUNqNGRobXZUU3JFQVJ1VzRhWnN0RDBiaFdKemd4Vk5EWGNvNgpzQ3Q3K0Z1UEp0YnJnZkI0cS84Q0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZBSzNsT0ZKcnZYdnJaSS9YcFRDQ2ovYUVXZUVNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSklPcDkyWXh2dmVRSGl2akpndQp2RVJxUVF0djhRMGszbmVVSk9iQ2E1a3loaXZuQ2VEK1FRWXEwZmE5WGFYTFZQeWJYQU9lVHZJVDNqZjF0Z1VvCjR0RktYQ3NPOE5Eam9iZUtad0Z0cUpMS3RLaXRWZkJaeVV4UVU1VkwrTWZhNmU0T1BCbEk0dC83Sm03bDM1M3UKV2JYbTVRT08rYjFyelJKSUdhcE5XN1BqMUY2eUcyY1RFSVFCRnJUMUx2M0lIa2ZnYlUxKzJ2MWF2RG9VaFo2NgpZbTRBT0RXQnZLeEc3Nkozb2pyazQ4cHExdEVlVTExemZHVlNzbDBRUDNJNlpuRGVFWVdMWWVTV1VsMlEzRVZoCjhVdWpWVTlhKzc2SGZGcC9sK1h6bE5aaDdqemNaYWNCWmtNOEJOYzJVOWNldU9ObTRWSFpISGRJNWpCOERTVW8KUW9NPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
              }
            ],
            "cluster_id": null,
            "created_at": "2023-07-12 10:35:44.086 +0000 UTC",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator"
            ],
            "encryption_config": [
              {
                "provider": [
                  {
                    "key_arn": "arn:aws:kms:ap-south-1:998516096174:key/e19bf4e0-1b9d-48bc-ac0f-c688e35318b0"
                  }
                ],
                "resources": [
                  "secrets"
                ]
              }
            ],
            "endpoint": "https://68A6BF6E01B74582D27EB67600967989.gr7.ap-south-1.eks.amazonaws.com",
            "id": "atlassian-cluster-1",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "atlassian-cluster-1",
            "outpost_config": [],
            "platform_version": "eks.3",
            "role_arn": "arn:aws:iam::998516096174:role/atlassian-cluster-1-cluster-20230712103521018600000004",
            "status": "ACTIVE",
            "tags": {},
            "tags_all": {},
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "version": "1.27",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-0084fed1236d353e3",
                "endpoint_private_access": true,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0cad4a1ee15b755b6"
                ],
                "subnet_ids": [
                  "subnet-03ce94c2a2af0a2aa",
                  "subnet-072b3186da6c8e27d",
                  "subnet-073a5d0b35e22e05d"
                ],
                "vpc_id": "vpc-0f851beb2ba287c51"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.eks_cluster.data.aws_subnets.private_subnets",
            "module.eks_cluster.module.eks.aws_cloudwatch_log_group.this",
            "module.eks_cluster.module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node",
            "module.eks_cluster.module.eks.aws_security_group_rule.cluster",
            "module.eks_cluster.module.eks.aws_security_group_rule.node",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks",
      "mode": "managed",
      "type": "aws_iam_openid_connect_provider",
      "name": "oidc_provider",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::998516096174:oidc-provider/oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989",
            "client_id_list": [
              "sts.amazonaws.com"
            ],
            "id": "arn:aws:iam::998516096174:oidc-provider/oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989",
            "tags": {
              "Name": "atlassian-cluster-1-eks-irsa"
            },
            "tags_all": {
              "Name": "atlassian-cluster-1-eks-irsa"
            },
            "thumbprint_list": [
              "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
              "06b25927c42a721631c1efd9431e648fa62e1e39",
              "2ad974a775f73cbdbbd8f5ac3a49255fa8fb1f8c",
              "b7e3017b01708fa231aa0dbd1b7ec441e2646149"
            ],
            "url": "oidc.eks.ap-south-1.amazonaws.com/id/68A6BF6E01B74582D27EB67600967989"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_cluster.data.aws_subnets.private_subnets",
            "module.eks_cluster.module.eks.aws_cloudwatch_log_group.this",
            "module.eks_cluster.module.eks.aws_eks_cluster.this",
            "module.eks_cluster.module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node",
            "module.eks_cluster.module.eks.aws_security_group_rule.cluster",
            "module.eks_cluster.module.eks.aws_security_group_rule.node",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.data.tls_certificate.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::998516096174:policy/atlassian-cluster-1-cluster-ClusterEncryption2023071210354165820000000e",
            "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
            "id": "arn:aws:iam::998516096174:policy/atlassian-cluster-1-cluster-ClusterEncryption2023071210354165820000000e",
            "name": "atlassian-cluster-1-cluster-ClusterEncryption2023071210354165820000000e",
            "name_prefix": "atlassian-cluster-1-cluster-ClusterEncryption",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:ap-south-1:998516096174:key/e19bf4e0-1b9d-48bc-ac0f-c688e35318b0\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA6Q7BSPSXMWLSLWQSV",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::998516096174:role/atlassian-cluster-1-cluster-20230712103521018600000004",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2023-07-12T10:35:22Z",
            "description": "",
            "force_detach_policies": true,
            "id": "atlassian-cluster-1-cluster-20230712103521018600000004",
            "inline_policy": [
              {
                "name": "atlassian-cluster-1-cluster",
                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"*\"}]}"
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::998516096174:policy/atlassian-cluster-1-cluster-ClusterEncryption2023071210354165820000000e",
              "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
              "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
            ],
            "max_session_duration": 3600,
            "name": "atlassian-cluster-1-cluster-20230712103521018600000004",
            "name_prefix": "atlassian-cluster-1-cluster-",
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "tags_all": {},
            "unique_id": "AROA6Q7BSPSXNTDHIACS5"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "atlassian-cluster-1-cluster-20230712103521018600000004-2023071210354311900000000f",
            "policy_arn": "arn:aws:iam::998516096174:policy/atlassian-cluster-1-cluster-ClusterEncryption2023071210354165820000000e",
            "role": "atlassian-cluster-1-cluster-20230712103521018600000004"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_cluster.module.eks.aws_iam_policy.cluster_encryption",
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "AmazonEKSClusterPolicy",
          "schema_version": 0,
          "attributes": {
            "id": "atlassian-cluster-1-cluster-20230712103521018600000004-2023071210352496810000000d",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "role": "atlassian-cluster-1-cluster-20230712103521018600000004"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKSVPCResourceController",
          "schema_version": 0,
          "attributes": {
            "id": "atlassian-cluster-1-cluster-20230712103521018600000004-2023071210352489990000000c",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
            "role": "atlassian-cluster-1-cluster-20230712103521018600000004"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-south-1:998516096174:security-group/sg-0cad4a1ee15b755b6",
            "description": "EKS cluster security group",
            "egress": [],
            "id": "sg-0cad4a1ee15b755b6",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "Node groups to cluster API",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0e98117b37165479e"
                ],
                "self": false,
                "to_port": 443
              }
            ],
            "name": "atlassian-cluster-1-cluster-20230712103521016800000002",
            "name_prefix": "atlassian-cluster-1-cluster-",
            "owner_id": "998516096174",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "atlassian-cluster-1-cluster"
            },
            "tags_all": {
              "Name": "atlassian-cluster-1-cluster"
            },
            "timeouts": null,
            "vpc_id": "vpc-0f851beb2ba287c51"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-south-1:998516096174:security-group/sg-0e98117b37165479e",
            "description": "EKS node shared security group",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow all egress",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0e98117b37165479e",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 4443/tcp webhook",
                "from_port": 4443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0cad4a1ee15b755b6"
                ],
                "self": false,
                "to_port": 4443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 6443/tcp webhook",
                "from_port": 6443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0cad4a1ee15b755b6"
                ],
                "self": false,
                "to_port": 6443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 8443/tcp webhook",
                "from_port": 8443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0cad4a1ee15b755b6"
                ],
                "self": false,
                "to_port": 8443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 9443/tcp webhook",
                "from_port": 9443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0cad4a1ee15b755b6"
                ],
                "self": false,
                "to_port": 9443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node groups",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0cad4a1ee15b755b6"
                ],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node kubelets",
                "from_port": 10250,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0cad4a1ee15b755b6"
                ],
                "self": false,
                "to_port": 10250
              },
              {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS UDP",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": true,
                "to_port": 53
              },
              {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": true,
                "to_port": 53
              },
              {
                "cidr_blocks": [],
                "description": "Node to node ingress on ephemeral ports",
                "from_port": 1025,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": true,
                "to_port": 65535
              },
              {
                "cidr_blocks": [],
                "description": "elbv2.k8s.aws/targetGroupBinding=shared",
                "from_port": 31552,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-04cef87feee27283a"
                ],
                "self": false,
                "to_port": 31552
              }
            ],
            "name": "atlassian-cluster-1-node-20230712103521018600000005",
            "name_prefix": "atlassian-cluster-1-node-",
            "owner_id": "998516096174",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "atlassian-cluster-1-node",
              "kubernetes.io/cluster/atlassian-cluster-1": "owned"
            },
            "tags_all": {
              "Name": "atlassian-cluster-1-node",
              "kubernetes.io/cluster/atlassian-cluster-1": "owned"
            },
            "timeouts": null,
            "vpc_id": "vpc-0f851beb2ba287c51"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "ingress_nodes_443",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node groups to cluster API",
            "from_port": 443,
            "id": "sgrule-3752360641",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-0cad4a1ee15b755b6",
            "security_group_rule_id": "sgr-0cbb53e510b1303ae",
            "self": false,
            "source_security_group_id": "sg-0e98117b37165479e",
            "timeouts": null,
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "egress_all",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow all egress",
            "from_port": 0,
            "id": "sgrule-1972140094",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_group_id": "sg-0e98117b37165479e",
            "security_group_rule_id": "sgr-091a7862290dbb2e3",
            "self": false,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 0,
            "type": "egress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_443",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node groups",
            "from_port": 443,
            "id": "sgrule-447915244",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0e98117b37165479e",
            "security_group_rule_id": "sgr-0d0047f9596c96f14",
            "self": false,
            "source_security_group_id": "sg-0cad4a1ee15b755b6",
            "timeouts": null,
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_4443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 4443/tcp webhook",
            "from_port": 4443,
            "id": "sgrule-2744392931",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0e98117b37165479e",
            "security_group_rule_id": "sgr-08dd19940805cdbeb",
            "self": false,
            "source_security_group_id": "sg-0cad4a1ee15b755b6",
            "timeouts": null,
            "to_port": 4443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_6443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 6443/tcp webhook",
            "from_port": 6443,
            "id": "sgrule-1792441205",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0e98117b37165479e",
            "security_group_rule_id": "sgr-0707eab0a664ec09f",
            "self": false,
            "source_security_group_id": "sg-0cad4a1ee15b755b6",
            "timeouts": null,
            "to_port": 6443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_8443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 8443/tcp webhook",
            "from_port": 8443,
            "id": "sgrule-2039105364",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0e98117b37165479e",
            "security_group_rule_id": "sgr-06927d9412c71297b",
            "self": false,
            "source_security_group_id": "sg-0cad4a1ee15b755b6",
            "timeouts": null,
            "to_port": 8443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_9443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 9443/tcp webhook",
            "from_port": 9443,
            "id": "sgrule-489387167",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0e98117b37165479e",
            "security_group_rule_id": "sgr-047d6dc173fdbe17a",
            "self": false,
            "source_security_group_id": "sg-0cad4a1ee15b755b6",
            "timeouts": null,
            "to_port": 9443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_kubelet",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node kubelets",
            "from_port": 10250,
            "id": "sgrule-1523602746",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0e98117b37165479e",
            "security_group_rule_id": "sgr-08fa236518d28e0d3",
            "self": false,
            "source_security_group_id": "sg-0cad4a1ee15b755b6",
            "timeouts": null,
            "to_port": 10250,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_nodes_ephemeral",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node ingress on ephemeral ports",
            "from_port": 1025,
            "id": "sgrule-78116856",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0e98117b37165479e",
            "security_group_rule_id": "sgr-0f9d31360177f7b83",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 65535,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_self_coredns_tcp",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node CoreDNS",
            "from_port": 53,
            "id": "sgrule-2020687617",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0e98117b37165479e",
            "security_group_rule_id": "sgr-0160a347b463cb868",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 53,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_self_coredns_udp",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node CoreDNS UDP",
            "from_port": 53,
            "id": "sgrule-3694042350",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "udp",
            "security_group_id": "sg-0e98117b37165479e",
            "security_group_rule_id": "sgr-05535e3832ec699a0",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 53,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks",
      "mode": "managed",
      "type": "time_sleep",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/time\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "create_duration": "30s",
            "destroy_duration": null,
            "id": "2023-07-12T10:44:43Z",
            "triggers": {
              "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1EY3hNakV3TkRBeU9Wb1hEVE16TURjd09URXdOREF5T1Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmhTCkZ2WnhMRU9zckgrU2czN0F5d0V5WlFVTURJOUg0UHBZNUhkRG4xMXh4MmFlVlZ4aXNCWVZ5aXNHUzZVY3ljbWsKMU9aUEczblhoMlBORUNweHo4VDVkdlJRVVdBWDZLYUpPT1RZYzRsb1o5VEZMWjZPTWQ1NzFUalZRZExCdDdhVgpXbHg5a1F4a3JWQnd6RXdmU3BkQ0I1Zm9GR0FsU1FsTVlBaFlDWlBta3h0RFRiVDRZbUFwUmdMUFRTZjhhd29uCldveElGRERMWElOTUYxTC9uSlV6QkhETlljdWZoa2xYUDZvQkRlWHdTbFNZeXdnWnU3cTBVT0JzUFBxT3ZRSnEKS0d2Rzc4MUF3MVo1dGxVd0lNcGxrMzhZUHJncUNqNGRobXZUU3JFQVJ1VzRhWnN0RDBiaFdKemd4Vk5EWGNvNgpzQ3Q3K0Z1UEp0YnJnZkI0cS84Q0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZBSzNsT0ZKcnZYdnJaSS9YcFRDQ2ovYUVXZUVNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSklPcDkyWXh2dmVRSGl2akpndQp2RVJxUVF0djhRMGszbmVVSk9iQ2E1a3loaXZuQ2VEK1FRWXEwZmE5WGFYTFZQeWJYQU9lVHZJVDNqZjF0Z1VvCjR0RktYQ3NPOE5Eam9iZUtad0Z0cUpMS3RLaXRWZkJaeVV4UVU1VkwrTWZhNmU0T1BCbEk0dC83Sm03bDM1M3UKV2JYbTVRT08rYjFyelJKSUdhcE5XN1BqMUY2eUcyY1RFSVFCRnJUMUx2M0lIa2ZnYlUxKzJ2MWF2RG9VaFo2NgpZbTRBT0RXQnZLeEc3Nkozb2pyazQ4cHExdEVlVTExemZHVlNzbDBRUDNJNlpuRGVFWVdMWWVTV1VsMlEzRVZoCjhVdWpWVTlhKzc2SGZGcC9sK1h6bE5aaDdqemNaYWNCWmtNOEJOYzJVOWNldU9ObTRWSFpISGRJNWpCOERTVW8KUW9NPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
              "cluster_endpoint": "https://68A6BF6E01B74582D27EB67600967989.gr7.ap-south-1.eks.amazonaws.com",
              "cluster_name": "atlassian-cluster-1",
              "cluster_version": "1.27"
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks_cluster.data.aws_subnets.private_subnets",
            "module.eks_cluster.module.eks.aws_cloudwatch_log_group.this",
            "module.eks_cluster.module.eks.aws_eks_cluster.this",
            "module.eks_cluster.module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node",
            "module.eks_cluster.module.eks.aws_security_group_rule.cluster",
            "module.eks_cluster.module.eks.aws_security_group_rule.node",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "998516096174",
            "arn": "arn:aws:iam::998516096174:user/svc-terraform",
            "id": "998516096174",
            "user_id": "AIDA6Q7BSPSXNVRO46LMO"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2560088296",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSNodeAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "ec2.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSNodeAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_eks_node_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "ami_type": "AL2_x86_64",
            "arn": "arn:aws:eks:ap-south-1:998516096174:nodegroup/atlassian-cluster-1/node-group-1-20230712104444490400000015/c6c4a4da-0896-661a-daa4-820179cc21be",
            "capacity_type": "ON_DEMAND",
            "cluster_name": "atlassian-cluster-1",
            "disk_size": 0,
            "force_update_version": null,
            "id": "atlassian-cluster-1:node-group-1-20230712104444490400000015",
            "instance_types": [
              "t3.xlarge"
            ],
            "labels": {},
            "launch_template": [
              {
                "id": "lt-079faa9db80c97dc9",
                "name": "one-20230712104443855300000013",
                "version": "1"
              }
            ],
            "node_group_name": "node-group-1-20230712104444490400000015",
            "node_group_name_prefix": "node-group-1-",
            "node_role_arn": "arn:aws:iam::998516096174:role/node-group-1-eks-node-group-20230712103521016500000001",
            "release_version": "1.27.1-20230703",
            "remote_access": [],
            "resources": [
              {
                "autoscaling_groups": [
                  {
                    "name": "eks-node-group-1-20230712104444490400000015-c6c4a4da-0896-661a-daa4-820179cc21be"
                  }
                ],
                "remote_access_security_group_id": ""
              }
            ],
            "scaling_config": [
              {
                "desired_size": 2,
                "max_size": 12,
                "min_size": 1
              }
            ],
            "status": "ACTIVE",
            "subnet_ids": [
              "subnet-03ce94c2a2af0a2aa",
              "subnet-072b3186da6c8e27d",
              "subnet-073a5d0b35e22e05d"
            ],
            "tags": {
              "Name": "node-group-1"
            },
            "tags_all": {
              "Name": "node-group-1"
            },
            "taint": [],
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "update_config": [
              {
                "max_unavailable": 0,
                "max_unavailable_percentage": 33
              }
            ],
            "version": "1.27"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.eks_cluster.data.aws_subnets.private_subnets",
            "module.eks_cluster.module.eks.aws_cloudwatch_log_group.this",
            "module.eks_cluster.module.eks.aws_eks_cluster.this",
            "module.eks_cluster.module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node",
            "module.eks_cluster.module.eks.aws_security_group_rule.cluster",
            "module.eks_cluster.module.eks.aws_security_group_rule.node",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current",
            "module.eks_cluster.module.eks.time_sleep.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::998516096174:role/node-group-1-eks-node-group-20230712103521016500000001",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2023-07-12T10:35:22Z",
            "description": "EKS managed node group IAM role",
            "force_detach_policies": true,
            "id": "node-group-1-eks-node-group-20230712103521016500000001",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
              "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
              "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy"
            ],
            "max_session_duration": 3600,
            "name": "node-group-1-eks-node-group-20230712103521016500000001",
            "name_prefix": "node-group-1-eks-node-group-",
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "tags_all": {},
            "unique_id": "AROA6Q7BSPSXOSIOP4BHJ"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "additional",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "ebs_csi_driver_policy",
          "schema_version": 0,
          "attributes": {
            "id": "node-group-1-eks-node-group-20230712103521016500000001-20230712103523998100000008",
            "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy",
            "role": "node-group-1-eks-node-group-20230712103521016500000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          "schema_version": 0,
          "attributes": {
            "id": "node-group-1-eks-node-group-20230712103521016500000001-2023071210352445420000000a",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "role": "node-group-1-eks-node-group-20230712103521016500000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          "schema_version": 0,
          "attributes": {
            "id": "node-group-1-eks-node-group-20230712103521016500000001-2023071210352460110000000b",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "role": "node-group-1-eks-node-group-20230712103521016500000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
          "schema_version": 0,
          "attributes": {
            "id": "node-group-1-eks-node-group-20230712103521016500000001-20230712103524307000000009",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
            "role": "node-group-1-eks-node-group-20230712103521016500000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_launch_template",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:ap-south-1:998516096174:launch-template/lt-079faa9db80c97dc9",
            "block_device_mappings": [],
            "capacity_reservation_specification": [],
            "cpu_options": [],
            "credit_specification": [],
            "default_version": 1,
            "description": "Custom launch template for node-group-1 EKS managed node group",
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_optimized": "",
            "elastic_gpu_specifications": [],
            "elastic_inference_accelerator": [],
            "enclave_options": [],
            "hibernation_options": [],
            "iam_instance_profile": [],
            "id": "lt-079faa9db80c97dc9",
            "image_id": "",
            "instance_initiated_shutdown_behavior": "",
            "instance_market_options": [],
            "instance_requirements": [],
            "instance_type": "",
            "kernel_id": "",
            "key_name": "",
            "latest_version": 1,
            "license_specification": [],
            "maintenance_options": [],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "",
                "http_put_response_hop_limit": 2,
                "http_tokens": "required",
                "instance_metadata_tags": ""
              }
            ],
            "monitoring": [
              {
                "enabled": true
              }
            ],
            "name": "one-20230712104443855300000013",
            "name_prefix": "one-",
            "network_interfaces": [],
            "placement": [],
            "private_dns_name_options": [],
            "ram_disk_id": "",
            "security_group_names": [],
            "tag_specifications": [
              {
                "resource_type": "instance",
                "tags": {
                  "Name": "node-group-1"
                }
              },
              {
                "resource_type": "network-interface",
                "tags": {
                  "Name": "node-group-1"
                }
              },
              {
                "resource_type": "volume",
                "tags": {
                  "Name": "node-group-1"
                }
              }
            ],
            "tags": {},
            "tags_all": {},
            "update_default_version": true,
            "user_data": "",
            "vpc_security_group_ids": [
              "sg-0e98117b37165479e"
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_cluster.data.aws_subnets.private_subnets",
            "module.eks_cluster.module.eks.aws_cloudwatch_log_group.this",
            "module.eks_cluster.module.eks.aws_eks_cluster.this",
            "module.eks_cluster.module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.aws_security_group.cluster",
            "module.eks_cluster.module.eks.aws_security_group.node",
            "module.eks_cluster.module.eks.aws_security_group_rule.cluster",
            "module.eks_cluster.module.eks.aws_security_group_rule.node",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current",
            "module.eks_cluster.module.eks.time_sleep.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks.module.kms",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "998516096174",
            "arn": "arn:aws:iam::998516096174:user/svc-terraform",
            "id": "998516096174",
            "user_id": "AIDA6Q7BSPSXNVRO46LMO"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks.module.kms",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2824243244",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"KeyAdministration\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:Update*\",\n        \"kms:UntagResource\",\n        \"kms:TagResource\",\n        \"kms:ScheduleKeyDeletion\",\n        \"kms:Revoke*\",\n        \"kms:Put*\",\n        \"kms:List*\",\n        \"kms:Get*\",\n        \"kms:Enable*\",\n        \"kms:Disable*\",\n        \"kms:Describe*\",\n        \"kms:Delete*\",\n        \"kms:Create*\",\n        \"kms:CancelKeyDeletion\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::998516096174:user/svc-terraform\"\n      }\n    },\n    {\n      \"Sid\": \"KeyUsage\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:ReEncrypt*\",\n        \"kms:GenerateDataKey*\",\n        \"kms:Encrypt\",\n        \"kms:DescribeKey\",\n        \"kms:Decrypt\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::998516096174:role/atlassian-cluster-1-cluster-20230712103521018600000004\"\n      }\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "kms:CancelKeyDeletion",
                  "kms:Create*",
                  "kms:Delete*",
                  "kms:Describe*",
                  "kms:Disable*",
                  "kms:Enable*",
                  "kms:Get*",
                  "kms:List*",
                  "kms:Put*",
                  "kms:Revoke*",
                  "kms:ScheduleKeyDeletion",
                  "kms:TagResource",
                  "kms:UntagResource",
                  "kms:Update*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::998516096174:user/svc-terraform"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "KeyAdministration"
              },
              {
                "actions": [
                  "kms:Decrypt",
                  "kms:DescribeKey",
                  "kms:Encrypt",
                  "kms:GenerateDataKey*",
                  "kms:ReEncrypt*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::998516096174:role/atlassian-cluster-1-cluster-20230712103521018600000004"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "KeyUsage"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks.module.kms",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_alias",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "cluster",
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:ap-south-1:998516096174:alias/eks/atlassian-cluster-1",
            "id": "alias/eks/atlassian-cluster-1",
            "name": "alias/eks/atlassian-cluster-1",
            "name_prefix": "",
            "target_key_arn": "arn:aws:kms:ap-south-1:998516096174:key/e19bf4e0-1b9d-48bc-ac0f-c688e35318b0",
            "target_key_id": "e19bf4e0-1b9d-48bc-ac0f-c688e35318b0"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.kms.aws_kms_external_key.this",
            "module.eks_cluster.module.eks.module.kms.aws_kms_key.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks_cluster.module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_key",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:ap-south-1:998516096174:key/e19bf4e0-1b9d-48bc-ac0f-c688e35318b0",
            "bypass_policy_lockout_safety_check": false,
            "custom_key_store_id": "",
            "customer_master_key_spec": "SYMMETRIC_DEFAULT",
            "deletion_window_in_days": null,
            "description": "atlassian-cluster-1 cluster encryption key",
            "enable_key_rotation": true,
            "id": "e19bf4e0-1b9d-48bc-ac0f-c688e35318b0",
            "is_enabled": true,
            "key_id": "e19bf4e0-1b9d-48bc-ac0f-c688e35318b0",
            "key_usage": "ENCRYPT_DECRYPT",
            "multi_region": false,
            "policy": "{\"Statement\":[{\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:Put*\",\"kms:List*\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::998516096174:user/svc-terraform\"},\"Resource\":\"*\",\"Sid\":\"KeyAdministration\"},{\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::998516096174:role/atlassian-cluster-1-cluster-20230712103521018600000004\"},\"Resource\":\"*\",\"Sid\":\"KeyUsage\"}],\"Version\":\"2012-10-17\"}",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks_cluster.module.eks.aws_iam_role.this",
            "module.eks_cluster.module.eks.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks_cluster.module.eks.data.aws_iam_session_context.current",
            "module.eks_cluster.module.eks.data.aws_partition.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks_cluster.module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks_cluster.module.eks.module.kms.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    }
  ],
  "check_results": null
}
